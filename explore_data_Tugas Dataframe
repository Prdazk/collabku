{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Prdazk/collabku/blob/main/explore_data_Tugas%20Dataframe\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "a28663ee",
      "metadata": {
        "id": "a28663ee"
      },
      "source": [
        "# Discussion 1: Pandas Review\n",
        "\n",
        "Mari kita mulai dengan memuat paket-paket yang diperlukan untuk latihan hari ini, yang akan melihat data film dari IMDb. Kita menggunakan fungsi read_csv untuk memuat data dari internet, tetapi kamu juga bisa menggunakan fungsi ini untuk memuat file dari penyimpanan lokalmu.\n",
        "\n",
        "CATATAN: *Output dari sel-sel mungkin tidak benar jika dijalankan tidak berurutan, meskipun kode kamu sudah benar. Jika ragu, kamu bisa menjalankan semua sel sekaligus, yang seharusnya tidak memakan waktu lebih dari beberapa detik.*"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "id": "4j-uJamRWD2Z",
      "metadata": {
        "id": "4j-uJamRWD2Z"
      },
      "outputs": [],
      "source": [
        "import os, random, numpy as np\n",
        "SEED = 189\n",
        "\n",
        "os.environ[\"PYTHONHASHSEED\"] = str(SEED)\n",
        "\n",
        "random.seed(SEED)\n",
        "np.random.seed(SEED)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "id": "982be303",
      "metadata": {
        "id": "982be303"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "\n",
        "# Load the title_basics dataset from IMDb\n",
        "title_basics  = pd.read_csv(\n",
        "    \"https://datasets.imdbws.com/title.basics.tsv.gz\",\n",
        "    sep=\"\\t\", compression=\"gzip\", na_values=\"\\\\N\", nrows=500000\n",
        ")\n",
        "# Load the title_ratings dataset from IMDb\n",
        "title_ratings = pd.read_csv(\n",
        "    \"https://datasets.imdbws.com/title.ratings.tsv.gz\",\n",
        "    sep=\"\\t\", compression=\"gzip\", na_values=\"\\\\N\", nrows=500000\n",
        ")\n",
        "\n",
        "# Sort both dataframes by 'tconst' and reset the index\n",
        "title_basics  = title_basics.sort_values(\"tconst\", kind=\"mergesort\").reset_index(drop=True)\n",
        "title_ratings = title_ratings.sort_values(\"tconst\", kind=\"mergesort\").reset_index(drop=True)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "1c2b905d",
      "metadata": {
        "id": "1c2b905d"
      },
      "source": [
        "## Part 1: Exploration and Data Cleaning\n",
        "\n",
        "Mari kita mulai dengan memeriksa `title_basics` `DataFrame`."
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Q 1.1\n",
        "\n",
        "Ada berapa kolom di `title_basics` `DataFrame`?\n",
        "\n",
        "Apa tipe data dari kolom startYear? Apakah ini masuk akal?\n"
      ],
      "metadata": {
        "id": "gtD1XrLqaDMw"
      },
      "id": "gtD1XrLqaDMw"
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "id": "79f62b2b",
      "metadata": {
        "id": "79f62b2b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "494e0c6d-ee25-4342-fc7a-dfbb08a03430"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Jumlah kolom di title_basics: 9\n",
            "Tipe data startYear: float64\n"
          ]
        }
      ],
      "source": [
        "\n",
        "# YOUR CODE HERE\n",
        "# Cek jumlah kolom\n",
        "print(\"Jumlah kolom di title_basics:\", len(title_basics.columns))\n",
        "\n",
        "# Cek tipe data startYear\n",
        "print(\"Tipe data startYear:\", title_basics[\"startYear\"].dtype)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Q1.2\n",
        "\n",
        "Berapa nilai pada baris ke-101 di kolom `primaryTitle` dari DataFrame `title_basics` ?\n",
        "PETUNJUK: Ingat bahwa DataFrame menggunakan indeks mulai dari 0 (0-indexing).\n"
      ],
      "metadata": {
        "id": "7Tksys_baYIi"
      },
      "id": "7Tksys_baYIi"
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "id": "10583971",
      "metadata": {
        "id": "10583971",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "e4e3e9e8-e0b4-4361-a186-7a5043eb41d5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'The Beach at Villiers in a Gale'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ],
      "source": [
        "\n",
        "# YOUR CODE HERE\n",
        "title_basics[\"primaryTitle\"].iloc[100]"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Q1.3\n",
        "\n",
        "Tampilkan 3 baris pertama dan 6 baris terakhir dari DataFrame `title_basics` simpan sebagai satu `DataFrame`baru.\n"
      ],
      "metadata": {
        "id": "kcO_Aylsali-"
      },
      "id": "kcO_Aylsali-"
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "id": "3617e365",
      "metadata": {
        "id": "3617e365",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 577
        },
        "outputId": "dec54e51-169c-4069-ede2-dfbceccac093"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           tconst  titleType                       primaryTitle  \\\n",
              "0       tt0000001      short                         Carmencita   \n",
              "1       tt0000002      short             Le clown et ses chiens   \n",
              "2       tt0000003      short                       Poor Pierrot   \n",
              "499994  tt0520686  tvEpisode  Reinhold Beckmann, Morgan Freeman   \n",
              "499995  tt0520687  tvEpisode         Episode dated 23 July 2001   \n",
              "499996  tt0520688  tvEpisode    Episode dated 24 September 2001   \n",
              "499997  tt0520689  tvEpisode      Episode dated 29 October 2001   \n",
              "499998  tt0520690  tvEpisode     Episode dated 12 November 2001   \n",
              "499999  tt0520691  tvEpisode      Episode dated 14 January 2002   \n",
              "\n",
              "                            originalTitle  isAdult  startYear  endYear  \\\n",
              "0                              Carmencita        0     1894.0      NaN   \n",
              "1                  Le clown et ses chiens        0     1892.0      NaN   \n",
              "2                          Pauvre Pierrot        0     1892.0      NaN   \n",
              "499994  Reinhold Beckmann, Morgan Freeman        0     2001.0      NaN   \n",
              "499995         Episode dated 23 July 2001        0     2001.0      NaN   \n",
              "499996    Episode dated 24 September 2001        0     2001.0      NaN   \n",
              "499997      Episode dated 29 October 2001        0     2001.0      NaN   \n",
              "499998     Episode dated 12 November 2001        0     2001.0      NaN   \n",
              "499999      Episode dated 14 January 2002        0     2002.0      NaN   \n",
              "\n",
              "        runtimeMinutes                    genres  \n",
              "0                  1.0         Documentary,Short  \n",
              "1                  5.0           Animation,Short  \n",
              "2                  5.0  Animation,Comedy,Romance  \n",
              "499994            60.0                 Talk-Show  \n",
              "499995            60.0                 Talk-Show  \n",
              "499996            60.0                 Talk-Show  \n",
              "499997            60.0                 Talk-Show  \n",
              "499998            60.0                 Talk-Show  \n",
              "499999            60.0                 Talk-Show  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-76cbc33c-a727-494d-931f-910e07f73698\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>tconst</th>\n",
              "      <th>titleType</th>\n",
              "      <th>primaryTitle</th>\n",
              "      <th>originalTitle</th>\n",
              "      <th>isAdult</th>\n",
              "      <th>startYear</th>\n",
              "      <th>endYear</th>\n",
              "      <th>runtimeMinutes</th>\n",
              "      <th>genres</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>tt0000001</td>\n",
              "      <td>short</td>\n",
              "      <td>Carmencita</td>\n",
              "      <td>Carmencita</td>\n",
              "      <td>0</td>\n",
              "      <td>1894.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Documentary,Short</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>tt0000002</td>\n",
              "      <td>short</td>\n",
              "      <td>Le clown et ses chiens</td>\n",
              "      <td>Le clown et ses chiens</td>\n",
              "      <td>0</td>\n",
              "      <td>1892.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.0</td>\n",
              "      <td>Animation,Short</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>tt0000003</td>\n",
              "      <td>short</td>\n",
              "      <td>Poor Pierrot</td>\n",
              "      <td>Pauvre Pierrot</td>\n",
              "      <td>0</td>\n",
              "      <td>1892.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.0</td>\n",
              "      <td>Animation,Comedy,Romance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>499994</th>\n",
              "      <td>tt0520686</td>\n",
              "      <td>tvEpisode</td>\n",
              "      <td>Reinhold Beckmann, Morgan Freeman</td>\n",
              "      <td>Reinhold Beckmann, Morgan Freeman</td>\n",
              "      <td>0</td>\n",
              "      <td>2001.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>60.0</td>\n",
              "      <td>Talk-Show</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>499995</th>\n",
              "      <td>tt0520687</td>\n",
              "      <td>tvEpisode</td>\n",
              "      <td>Episode dated 23 July 2001</td>\n",
              "      <td>Episode dated 23 July 2001</td>\n",
              "      <td>0</td>\n",
              "      <td>2001.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>60.0</td>\n",
              "      <td>Talk-Show</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>499996</th>\n",
              "      <td>tt0520688</td>\n",
              "      <td>tvEpisode</td>\n",
              "      <td>Episode dated 24 September 2001</td>\n",
              "      <td>Episode dated 24 September 2001</td>\n",
              "      <td>0</td>\n",
              "      <td>2001.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>60.0</td>\n",
              "      <td>Talk-Show</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>499997</th>\n",
              "      <td>tt0520689</td>\n",
              "      <td>tvEpisode</td>\n",
              "      <td>Episode dated 29 October 2001</td>\n",
              "      <td>Episode dated 29 October 2001</td>\n",
              "      <td>0</td>\n",
              "      <td>2001.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>60.0</td>\n",
              "      <td>Talk-Show</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>499998</th>\n",
              "      <td>tt0520690</td>\n",
              "      <td>tvEpisode</td>\n",
              "      <td>Episode dated 12 November 2001</td>\n",
              "      <td>Episode dated 12 November 2001</td>\n",
              "      <td>0</td>\n",
              "      <td>2001.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>60.0</td>\n",
              "      <td>Talk-Show</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>499999</th>\n",
              "      <td>tt0520691</td>\n",
              "      <td>tvEpisode</td>\n",
              "      <td>Episode dated 14 January 2002</td>\n",
              "      <td>Episode dated 14 January 2002</td>\n",
              "      <td>0</td>\n",
              "      <td>2002.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>60.0</td>\n",
              "      <td>Talk-Show</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76cbc33c-a727-494d-931f-910e07f73698')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-76cbc33c-a727-494d-931f-910e07f73698 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-76cbc33c-a727-494d-931f-910e07f73698');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-eaebc1f2-b883-4816-8afb-b8787fddd973\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eaebc1f2-b883-4816-8afb-b8787fddd973')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-eaebc1f2-b883-4816-8afb-b8787fddd973 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_030932d4-df4f-4309-813a-312a1d5b3179\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('subset_basics')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_030932d4-df4f-4309-813a-312a1d5b3179 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('subset_basics');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "subset_basics",
              "summary": "{\n  \"name\": \"subset_basics\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"tconst\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"tt0520690\",\n          \"tt0000002\",\n          \"tt0520688\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"titleType\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"tvEpisode\",\n          \"short\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"primaryTitle\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Episode dated 12 November 2001\",\n          \"Le clown et ses chiens\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"originalTitle\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Episode dated 12 November 2001\",\n          \"Le clown et ses chiens\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isAdult\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"startYear\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 54.25403210822215,\n        \"min\": 1892.0,\n        \"max\": 2002.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1892.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"endYear\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runtimeMinutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.190325369609415,\n        \"min\": 1.0,\n        \"max\": 60.0,\n        \"num_unique_values\": 3,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genres\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 11
        }
      ],
      "source": [
        "\n",
        "# YOUR CODE HERE\n",
        "# Ambil 3 baris pertama\n",
        "first_rows = title_basics.head(3)\n",
        "\n",
        "# Ambil 6 baris terakhir\n",
        "last_rows = title_basics.tail(6)\n",
        "\n",
        "# Gabungkan menjadi satu DataFrame baru\n",
        "subset_basics = pd.concat([first_rows, last_rows])\n",
        "\n",
        "# Tampilkan hasil\n",
        "subset_basics\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Q1.4\n",
        "\n",
        "Ada berapa jenis data unik pada `titleTypes` di DataFrame `title_basics`? Dan mana yang paling umum?\n"
      ],
      "metadata": {
        "id": "kHTuCDb6ayit"
      },
      "id": "kHTuCDb6ayit"
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "id": "0ef57e4c",
      "metadata": {
        "id": "0ef57e4c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6b0024f9-9111-4168-8851-2cde6d746997"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Jumlah jenis data unik pada titleType: 10\n",
            "\n",
            "Daftar jenis titleType:\n",
            "['short' 'movie' 'tvShort' 'tvMovie' 'tvEpisode' 'tvSeries' 'tvMiniSeries'\n",
            " 'tvSpecial' 'video' 'videoGame']\n",
            "\n",
            "Frekuensi tiap jenis titleType:\n",
            "titleType\n",
            "movie           213789\n",
            "short           118682\n",
            "video            44676\n",
            "tvMovie          37810\n",
            "tvSeries         37000\n",
            "tvEpisode        31900\n",
            "tvSpecial         5276\n",
            "tvMiniSeries      5065\n",
            "videoGame         4305\n",
            "tvShort           1497\n",
            "Name: count, dtype: int64\n",
            "\n",
            "Jenis titleType yang paling umum: movie\n"
          ]
        }
      ],
      "source": [
        "\n",
        "# YOUR CODE HERE\n",
        "# Hitung jumlah jenis data unik di kolom titleType\n",
        "unique_types = title_basics[\"titleType\"].nunique()\n",
        "print(\"Jumlah jenis data unik pada titleType:\", unique_types)\n",
        "\n",
        "# Lihat semua jenis titleType\n",
        "print(\"\\nDaftar jenis titleType:\")\n",
        "print(title_basics[\"titleType\"].unique())\n",
        "\n",
        "# Hitung frekuensi tiap titleType\n",
        "type_counts = title_basics[\"titleType\"].value_counts()\n",
        "print(\"\\nFrekuensi tiap jenis titleType:\")\n",
        "print(type_counts)\n",
        "\n",
        "# Ambil yang paling umum\n",
        "most_common = type_counts.idxmax()\n",
        "print(\"\\nJenis titleType yang paling umum:\", most_common)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ad14906b",
      "metadata": {
        "id": "ad14906b"
      },
      "source": [
        "Sekarang, mari kita latihan beberapa modifikasi umum pada `DataFrame`.\n",
        "### Q1.5\n",
        "\n",
        "Hilangkan kolom `originalTitle` and `endYear` dari `title_basics` `DataFrame`. pastikan kolom telah dihilangkan dari `title_basics` `DataFrame`.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "id": "7e79f93f",
      "metadata": {
        "id": "7e79f93f",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1bf59417-42e4-42de-c2ed-a877a1193b90"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Kolom saat ini di title_basics:\n",
            "Index(['tconst', 'titleType', 'primaryTitle', 'isAdult', 'startYear',\n",
            "       'runtimeMinutes', 'genres'],\n",
            "      dtype='object')\n"
          ]
        }
      ],
      "source": [
        "\n",
        "# YOUR CODE HERE\n",
        "\n",
        "# Hapus kolom originalTitle dan endYear\n",
        "title_basics = title_basics.drop(columns=[\"originalTitle\", \"endYear\"])\n",
        "\n",
        "# Cek apakah sudah hilang\n",
        "print(\"Kolom saat ini di title_basics:\")\n",
        "print(title_basics.columns)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Q1.6\n",
        "Ganti nama kolom `primaryTitle` menjadi `title` dan `startYear` menjadi `year` di `DataFrame` `title_basics`.\n",
        "Pastikan perubahan ini diterapkan secara permanen pada `title_basics`."
      ],
      "metadata": {
        "id": "XctoqlYkbUvj"
      },
      "id": "XctoqlYkbUvj"
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "id": "139da0ac",
      "metadata": {
        "id": "139da0ac",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "940193b1-b9aa-4e0a-cc33-cf406883d118"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Kolom saat ini di title_basics:\n",
            "Index(['tconst', 'titleType', 'title', 'isAdult', 'year', 'runtimeMinutes',\n",
            "       'genres'],\n",
            "      dtype='object')\n"
          ]
        }
      ],
      "source": [
        "# Ganti nama kolom\n",
        "title_basics = title_basics.rename(columns={\n",
        "    \"primaryTitle\": \"title\",\n",
        "    \"startYear\": \"year\"\n",
        "})\n",
        "\n",
        "# Cek apakah sudah berubah\n",
        "print(\"Kolom saat ini di title_basics:\")\n",
        "print(title_basics.columns)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "b2f8c08d",
      "metadata": {
        "id": "b2f8c08d"
      },
      "source": [
        "### Q1.7\n",
        "\n",
        "A crucial step in most data processing pipelines for machine learning is dealing with missing or corrupted data. Often, these missing values are represented as a `NaN` (not a number).\n",
        "\n",
        "Sometimes in the context of machine learning we'd want to estimate a value for a missing feature rather than remove that sample point entirely. Can you think of some simple ways in which we could perform that estimation?"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Mengisi dengan nilai rata-rata (mean) → cocok untuk data numerik yang distribusinya normal.\n",
        "\n",
        "Mengisi dengan median → lebih tahan terhadap outlier, misalnya untuk data durasi film.\n",
        "\n",
        "Mengisi dengan modus (mode) → cocok untuk data kategorikal, misalnya genre atau titleType.\n",
        "\n",
        "Forward/Backward fill → isi dengan nilai sebelum atau sesudahnya (berguna untuk data deret waktu).\n",
        "\n",
        "Estimasi berbasis kelompok → isi dengan mean/median dari kelompok tertentu, misalnya isi runtimeMinutes berdasarkan genre film.\n",
        "\n",
        "tujuan dari metode ini adalah meminimalkan hilangnya data sambil tetap menjaga distribusi aslinya agar model machine learning bisa belajar dengan baik."
      ],
      "metadata": {
        "id": "qzRHVjWxcDBz"
      },
      "id": "qzRHVjWxcDBz"
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Q1.8\n",
        "\n",
        "Hilangkan semua baris `title_basics` `DataFrame` where `runtimeMinutes` or `year` is `NaN`."
      ],
      "metadata": {
        "id": "_GxonqpAcJi3"
      },
      "id": "_GxonqpAcJi3"
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "id": "45b9de4a",
      "metadata": {
        "id": "45b9de4a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "60253aec-ac7b-4f6f-8f3d-015770f38406"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "runtimeMinutes    0\n",
            "year              0\n",
            "dtype: int64\n"
          ]
        }
      ],
      "source": [
        "# Hapus baris yang memiliki NaN di kolom runtimeMinutes atau year\n",
        "title_basics = title_basics.dropna(subset=[\"runtimeMinutes\", \"year\"])\n",
        "\n",
        "# Cek apakah masih ada NaN\n",
        "print(title_basics[[\"runtimeMinutes\", \"year\"]].isna().sum())\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Q1.9\n",
        "\n",
        "Ubah tipe data kolom year di `DataFrame` `title_basics` menjadi tipe yang lebih tepat.\n",
        "Kemudian, pastikan perubahan tersebut sudah diterapkan secara permanen."
      ],
      "metadata": {
        "id": "af2ghadqccZy"
      },
      "id": "af2ghadqccZy"
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "id": "26e3612b",
      "metadata": {
        "id": "26e3612b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "57fe813a-5dd2-471e-c4f8-35e0201e1d15"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "int64\n"
          ]
        }
      ],
      "source": [
        "# Ubah tipe data kolom year menjadi integer\n",
        "title_basics[\"year\"] = title_basics[\"year\"].astype(int)\n",
        "\n",
        "# Cek apakah sudah berubah permanen\n",
        "print(title_basics.dtypes[\"year\"])\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "8a7f65dc",
      "metadata": {
        "id": "8a7f65dc"
      },
      "source": [
        "Mari kita latihan lagi dengan penyaringan (filtering) dan pengurutan (sorting) dasar.\n",
        "\n",
        "### Q1.10\n",
        "\n",
        "Extract fitur film `(titleType == \"movie\")` yang dirilis tahun 1954 dari DataFrame `title_basics` dan simpan sebagai `DataFrame` baru dengan nama `feature_films_1954`."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "id": "a3165a21",
      "metadata": {
        "id": "a3165a21",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "14913988-57b6-4ea3-8686-e4508e2b21c4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          tconst titleType                        title  isAdult  year  \\\n",
              "35845  tt0036493     movie  Mystery of the Black Jungle        0  1954   \n",
              "36915  tt0037585     movie         Knights of the Queen        0  1954   \n",
              "37344  tt0038020     movie             Relato policíaco        0  1954   \n",
              "37411  tt0038089     movie                 Siluri umani        0  1954   \n",
              "37559  tt0038240     movie          Das Licht der Liebe        0  1954   \n",
              "\n",
              "       runtimeMinutes                    genres  \n",
              "35845            80.0  Action,Adventure,Mystery  \n",
              "36915            79.0                 Adventure  \n",
              "37344            75.0                     Crime  \n",
              "37411            87.0                 Drama,War  \n",
              "37559            95.0                     Drama  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-371b7998-76c4-4781-8d13-84d21af61785\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>tconst</th>\n",
              "      <th>titleType</th>\n",
              "      <th>title</th>\n",
              "      <th>isAdult</th>\n",
              "      <th>year</th>\n",
              "      <th>runtimeMinutes</th>\n",
              "      <th>genres</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>35845</th>\n",
              "      <td>tt0036493</td>\n",
              "      <td>movie</td>\n",
              "      <td>Mystery of the Black Jungle</td>\n",
              "      <td>0</td>\n",
              "      <td>1954</td>\n",
              "      <td>80.0</td>\n",
              "      <td>Action,Adventure,Mystery</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36915</th>\n",
              "      <td>tt0037585</td>\n",
              "      <td>movie</td>\n",
              "      <td>Knights of the Queen</td>\n",
              "      <td>0</td>\n",
              "      <td>1954</td>\n",
              "      <td>79.0</td>\n",
              "      <td>Adventure</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37344</th>\n",
              "      <td>tt0038020</td>\n",
              "      <td>movie</td>\n",
              "      <td>Relato policíaco</td>\n",
              "      <td>0</td>\n",
              "      <td>1954</td>\n",
              "      <td>75.0</td>\n",
              "      <td>Crime</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37411</th>\n",
              "      <td>tt0038089</td>\n",
              "      <td>movie</td>\n",
              "      <td>Siluri umani</td>\n",
              "      <td>0</td>\n",
              "      <td>1954</td>\n",
              "      <td>87.0</td>\n",
              "      <td>Drama,War</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37559</th>\n",
              "      <td>tt0038240</td>\n",
              "      <td>movie</td>\n",
              "      <td>Das Licht der Liebe</td>\n",
              "      <td>0</td>\n",
              "      <td>1954</td>\n",
              "      <td>95.0</td>\n",
              "      <td>Drama</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-371b7998-76c4-4781-8d13-84d21af61785')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-371b7998-76c4-4781-8d13-84d21af61785 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-371b7998-76c4-4781-8d13-84d21af61785');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-ba6e1961-3e79-436d-86ca-435a3f99bff0\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ba6e1961-3e79-436d-86ca-435a3f99bff0')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-ba6e1961-3e79-436d-86ca-435a3f99bff0 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "feature_films_1954",
              "summary": "{\n  \"name\": \"feature_films_1954\",\n  \"rows\": 1335,\n  \"fields\": [\n    {\n      \"column\": \"tconst\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1335,\n        \"samples\": [\n          \"tt0138368\",\n          \"tt0206764\",\n          \"tt0329724\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"titleType\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"movie\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1331,\n        \"samples\": [\n          \"Ma petite folie\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isAdult\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1954,\n        \"max\": 1954,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1954\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runtimeMinutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22.283180855223737,\n        \"min\": 38.0,\n        \"max\": 315.0,\n        \"num_unique_values\": 126,\n        \"samples\": [\n          67.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genres\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 187,\n        \"samples\": [\n          \"Documentary,Drama,Family\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 18
        }
      ],
      "source": [
        "# Filter hanya movie yang dirilis pada tahun 1954\n",
        "feature_films_1954 = title_basics[\n",
        "    (title_basics[\"titleType\"] == \"movie\") & (title_basics[\"year\"] == 1954)\n",
        "]\n",
        "\n",
        "# Tampilkan hasil\n",
        "feature_films_1954.head()\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Q1.11\n",
        "\n",
        "Di antara film fitur dari tahun 1954, film mana yang memiliki durasi terpanjang?\n",
        "Gunakan `title` dan `runtimeMinutes` sebagai sebuah DataFrame yang diambil dari `feature_films_1954` `DataFrame`."
      ],
      "metadata": {
        "id": "byEsV1GWdACD"
      },
      "id": "byEsV1GWdACD"
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "id": "7c504fd3",
      "metadata": {
        "id": "7c504fd3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 89
        },
        "outputId": "7b333e5e-ff61-460e-f2cd-e019e6adcc06"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                              title runtimeMinutes\n",
              "46204  Gunfighters of the Northwest          315.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5aaa810b-2abb-4c40-a4fd-d25dd4568b71\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>title</th>\n",
              "      <th>runtimeMinutes</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>46204</th>\n",
              "      <td>Gunfighters of the Northwest</td>\n",
              "      <td>315.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5aaa810b-2abb-4c40-a4fd-d25dd4568b71')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5aaa810b-2abb-4c40-a4fd-d25dd4568b71 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5aaa810b-2abb-4c40-a4fd-d25dd4568b71');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "  <div id=\"id_b3d692fb-e293-4f50-883e-68dab5ed99e8\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('longest_film_1954_df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_b3d692fb-e293-4f50-883e-68dab5ed99e8 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('longest_film_1954_df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "longest_film_1954_df",
              "repr_error": "0"
            }
          },
          "metadata": {},
          "execution_count": 19
        }
      ],
      "source": [
        "# Cari film dengan runtime terpanjang di tahun 1954\n",
        "longest_film_1954 = feature_films_1954.loc[\n",
        "    feature_films_1954[\"runtimeMinutes\"].idxmax(),\n",
        "    [\"title\", \"runtimeMinutes\"]\n",
        "]\n",
        "\n",
        "# Tampilkan hasil sebagai DataFrame\n",
        "longest_film_1954_df = longest_film_1954.to_frame().T\n",
        "longest_film_1954_df\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Bagian 2: Modifikasi Kompleks, Agregasi, Penggabungan, dan Plotting\n",
        "\n",
        "Mari kita mulai dengan memodifikasi `DataFrame` `title_basics` agar setiap baris hanya memiliki satu genre dengan cara menduplikasi baris yang memiliki beberapa genre. Fungsi [`df.explode`](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.explode.html) akan sangat membantu untuk transformasi ini."
      ],
      "metadata": {
        "id": "wZ-0OLfLeVE0"
      },
      "id": "wZ-0OLfLeVE0"
    },
    {
      "cell_type": "code",
      "source": [
        "# Pastikan kolom genres sudah dipisahkan berdasarkan koma\n",
        "title_basics[\"genres\"] = title_basics[\"genres\"].str.split(\",\")\n",
        "\n",
        "# Gunakan explode untuk pecah list menjadi baris terpisah\n",
        "title_basics = title_basics.explode(\"genres\").reset_index(drop=True)\n",
        "\n",
        "# Tampilkan hasil setelah eksplode\n",
        "title_basics.head(10)\n"
      ],
      "metadata": {
        "id": "PjJ6mBTZeLj5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "outputId": "690dc07a-8dea-40d1-e0be-dcccb06abc96"
      },
      "id": "PjJ6mBTZeLj5",
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      tconst titleType                   title  isAdult  year  runtimeMinutes  \\\n",
              "0  tt0000001     short              Carmencita        0  1894             1.0   \n",
              "1  tt0000001     short              Carmencita        0  1894             1.0   \n",
              "2  tt0000002     short  Le clown et ses chiens        0  1892             5.0   \n",
              "3  tt0000002     short  Le clown et ses chiens        0  1892             5.0   \n",
              "4  tt0000003     short            Poor Pierrot        0  1892             5.0   \n",
              "5  tt0000003     short            Poor Pierrot        0  1892             5.0   \n",
              "6  tt0000003     short            Poor Pierrot        0  1892             5.0   \n",
              "7  tt0000004     short             Un bon bock        0  1892            12.0   \n",
              "8  tt0000004     short             Un bon bock        0  1892            12.0   \n",
              "9  tt0000005     short        Blacksmith Scene        0  1893             1.0   \n",
              "\n",
              "        genres  \n",
              "0  Documentary  \n",
              "1        Short  \n",
              "2    Animation  \n",
              "3        Short  \n",
              "4    Animation  \n",
              "5       Comedy  \n",
              "6      Romance  \n",
              "7    Animation  \n",
              "8        Short  \n",
              "9        Short  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-01dff39f-3aa3-4ef3-b394-3ff4dfbfa12d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>tconst</th>\n",
              "      <th>titleType</th>\n",
              "      <th>title</th>\n",
              "      <th>isAdult</th>\n",
              "      <th>year</th>\n",
              "      <th>runtimeMinutes</th>\n",
              "      <th>genres</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>tt0000001</td>\n",
              "      <td>short</td>\n",
              "      <td>Carmencita</td>\n",
              "      <td>0</td>\n",
              "      <td>1894</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Documentary</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>tt0000001</td>\n",
              "      <td>short</td>\n",
              "      <td>Carmencita</td>\n",
              "      <td>0</td>\n",
              "      <td>1894</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Short</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>tt0000002</td>\n",
              "      <td>short</td>\n",
              "      <td>Le clown et ses chiens</td>\n",
              "      <td>0</td>\n",
              "      <td>1892</td>\n",
              "      <td>5.0</td>\n",
              "      <td>Animation</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>tt0000002</td>\n",
              "      <td>short</td>\n",
              "      <td>Le clown et ses chiens</td>\n",
              "      <td>0</td>\n",
              "      <td>1892</td>\n",
              "      <td>5.0</td>\n",
              "      <td>Short</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>tt0000003</td>\n",
              "      <td>short</td>\n",
              "      <td>Poor Pierrot</td>\n",
              "      <td>0</td>\n",
              "      <td>1892</td>\n",
              "      <td>5.0</td>\n",
              "      <td>Animation</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>tt0000003</td>\n",
              "      <td>short</td>\n",
              "      <td>Poor Pierrot</td>\n",
              "      <td>0</td>\n",
              "      <td>1892</td>\n",
              "      <td>5.0</td>\n",
              "      <td>Comedy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>tt0000003</td>\n",
              "      <td>short</td>\n",
              "      <td>Poor Pierrot</td>\n",
              "      <td>0</td>\n",
              "      <td>1892</td>\n",
              "      <td>5.0</td>\n",
              "      <td>Romance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>tt0000004</td>\n",
              "      <td>short</td>\n",
              "      <td>Un bon bock</td>\n",
              "      <td>0</td>\n",
              "      <td>1892</td>\n",
              "      <td>12.0</td>\n",
              "      <td>Animation</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>tt0000004</td>\n",
              "      <td>short</td>\n",
              "      <td>Un bon bock</td>\n",
              "      <td>0</td>\n",
              "      <td>1892</td>\n",
              "      <td>12.0</td>\n",
              "      <td>Short</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>tt0000005</td>\n",
              "      <td>short</td>\n",
              "      <td>Blacksmith Scene</td>\n",
              "      <td>0</td>\n",
              "      <td>1893</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Short</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-01dff39f-3aa3-4ef3-b394-3ff4dfbfa12d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-01dff39f-3aa3-4ef3-b394-3ff4dfbfa12d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-01dff39f-3aa3-4ef3-b394-3ff4dfbfa12d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-319e624a-21ab-44db-8619-4e4417548599\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-319e624a-21ab-44db-8619-4e4417548599')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-319e624a-21ab-44db-8619-4e4417548599 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "title_basics"
            }
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ddd9d62d",
      "metadata": {
        "id": "ddd9d62d"
      },
      "source": [
        "### Q2.1\n",
        "\n",
        "Untuk setiap `genre` dalam `DataFrame` `title_basics`, hitung rata-rata durasi (runtime) film fitur yang dirilis sejak tahun 1960.\n",
        "\n",
        "Tampilkan lima genre dengan rata-rata durasi terpanjang."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "id": "97ba3b91",
      "metadata": {
        "id": "97ba3b91",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 272
        },
        "outputId": "48c964b1-6ab7-4436-9326-6c2ed260c21f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "genres\n",
              "History      111.838384\n",
              "Musical      107.514460\n",
              "Biography    103.749091\n",
              "War          102.555033\n",
              "Romance      102.311578\n",
              "Name: runtimeMinutes, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>runtimeMinutes</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>genres</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>History</th>\n",
              "      <td>111.838384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Musical</th>\n",
              "      <td>107.514460</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Biography</th>\n",
              "      <td>103.749091</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>War</th>\n",
              "      <td>102.555033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Romance</th>\n",
              "      <td>102.311578</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ],
      "source": [
        "# Filter hanya film fitur sejak tahun 1960\n",
        "feature_films = title_basics[\n",
        "    (title_basics[\"titleType\"] == \"movie\") & (title_basics[\"year\"] >= 1960)\n",
        "]\n",
        "\n",
        "# Hitung rata-rata runtime per genre\n",
        "avg_runtime_per_genre = (\n",
        "    feature_films.groupby(\"genres\")[\"runtimeMinutes\"]\n",
        "    .mean()\n",
        "    .sort_values(ascending=False)\n",
        ")\n",
        "\n",
        "# Ambil 5 genre teratas\n",
        "top5_genres_runtime = avg_runtime_per_genre.head(5)\n",
        "top5_genres_runtime\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Q2.2\n",
        "\n",
        "Gabungkan DataFrame `title_ratings` dengan DataFrame `title_basics` dengan menghubungkan berdasarkan kolom `tconst`. Berapa banyak judul yang ada di `title_basics` tapi tidak ada di `title_ratings`? Simpan hasil penggabungan tersebut dalam variabel merged_df.\n",
        "\n",
        "*Petunjuk: Ingat bahwa karena genre dipisah-pisah, jumlah judul tidak sama dengan jumlah baris.*"
      ],
      "metadata": {
        "id": "xzaSo6uCg2PP"
      },
      "id": "xzaSo6uCg2PP"
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "id": "1645f018",
      "metadata": {
        "id": "1645f018",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "acd3a709-951b-48e0-8861-939e00549baf"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Total judul di title_basics: 354302\n",
            "Jumlah judul tanpa rating: 155967\n"
          ]
        }
      ],
      "source": [
        "# Gabungkan kedua DataFrame berdasarkan 'tconst'\n",
        "merged_df = pd.merge(\n",
        "    title_basics,\n",
        "    title_ratings,\n",
        "    on=\"tconst\",\n",
        "    how=\"left\"   # left join agar semua dari title_basics tetap ada\n",
        ")\n",
        "\n",
        "# Hitung jumlah judul di title_basics\n",
        "total_titles = title_basics[\"tconst\"].nunique()\n",
        "\n",
        "# Hitung jumlah judul yang berhasil punya rating\n",
        "titles_with_ratings = merged_df[\"tconst\"].nunique() - merged_df[\"averageRating\"].isna().sum()\n",
        "\n",
        "# Hitung jumlah judul yang tidak ada di title_ratings\n",
        "titles_without_ratings = merged_df[\"averageRating\"].isna().sum()\n",
        "\n",
        "print(\"Total judul di title_basics:\", total_titles)\n",
        "print(\"Jumlah judul tanpa rating:\", titles_without_ratings)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Q2.3\n",
        "\n",
        "Menggunakan `DataFrame` `merged_df` dan `plotly express`, buatlah sebuah **scatter plot** interaktif yang menampilkan hubungan antara `runtimeMinutes` dan `numVotes` untuk film-film di merged_df.\n",
        "Warnai titik-titik berdasarkan year film dan tambahkan judul serta label sumbu pada plot tersebut. Pastikan juga judul film terlihat saat kursor diarahkan ke titik data (hover).\n",
        "\n",
        "**Catatan**: Untuk mempermudah visualisasi, kita hanya mengambil sampel sebanyak 2000 film. Karena itu, kamu mungkin tidak akan melihat film favoritmu di plot ini. Penting untuk tidak mengubah nilai random state agar hasil yang didapat konsisten untuk pertanyaan berikutnya.*"
      ],
      "metadata": {
        "id": "R91YICJXhOFb"
      },
      "id": "R91YICJXhOFb"
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "id": "38704f50",
      "metadata": {
        "id": "38704f50",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "outputId": "85596a6f-1657-4f46-b46f-ecaf2cb7ea42"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"0d335b63-88a4-4d56-bafb-7efe2bb91b9a\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"0d335b63-88a4-4d56-bafb-7efe2bb91b9a\")) {                    Plotly.newPlot(                        \"0d335b63-88a4-4d56-bafb-7efe2bb91b9a\",                        [{\"customdata\":[[\"Black Sea Raid\",3.5],[\"Lisa, Tosca of Athens\",5.9],[\"Adam a Eva\",5.3],[\"Blusang itim\",7.2],[\"The Mountain Calls\",6.8],[\"Holtze\",5.2],[\"Undying Love\",3.1],[\"Clifford\",5.5],[\"Bankok Bahrain\",6.0],[\"Season of the Senses\",5.4],[\"Maya Bazaar\",6.8],[\"Daggers Drawn\",5.2],[\"Maniac Cop 2\",5.9],[\"Babylon A.D.\",5.5],[\"Three-Head Monster\",6.0],[\"Stargazer\",6.7],[\"Sugar Hill\",5.8],[\"Graciela\",6.8],[\"The Son of the Shark\",6.7],[\"Zero Hour!\",6.6],[\"Pallet on the Floor\",5.1],[\"Carmen Miranda: Bananas Is My Business\",7.6],[\"Boom!\",5.5],[\"Scotland Yard Commands\",6.4],[\"Monsieur Zivaco\",6.5],[\"Suna Sansar\",6.4],[\"The Midnight Story\",6.6],[\"Topkapi\",6.9],[\"Cesar & Rosalie\",7.3],[\"No Nukes\",6.9],[\"Highway Society\",5.7],[\"The Burned Barns\",6.6],[\"P.O. Box 1001\",6.9],[\"Rinaldó\",5.1],[\"The Protector\",5.3],[\"Another 9½ Weeks\",3.0],[\"Turning the Corner\",7.3],[\"The Rejected\",8.0],[\"Dumb Luck\",4.7],[\"Order No. 027\",4.9],[\"Tennessee Stallion\",5.2],[\"'Di ko kayang tanggapin\",4.9],[\"Morning Glory\",6.4],[\"Khilona\",7.1],[\"Tropic Holiday\",5.4],[\"Und der Regen verwischt jede Spur\",6.6],[\"Once Upon a Forest\",6.5],[\"Italia K2\",7.3],[\"The Three Investigators and the Secret of Skeleton Island\",5.7],[\"Gate to Heaven\",5.5],[\"La bonne étoile\",6.0],[\"007 1\\u002f2 no Carnaval\",5.7],[\"Green Card Fever\",5.7],[\"Lost in Galicia\",5.8],[\"Bitter Sweet\",6.4],[\"Zoo zéro\",5.3],[\"Nihon no jingi\",6.1],[\"American Hardcore\",7.3],[\"Coral Reefs\",6.1],[\"Juice\",5.6],[\"Fallen Angels Paradise\",7.0],[\"¿Chico o chica?\",6.6],[\"Gustaf Wasa, Part Two\",4.5],[\"Under the Sun\",6.8],[\"Bye Bye Blues\",7.3],[\"Singjâaopá-yák\",4.7],[\"Heiße Ware\",7.8],[\"Our Lady of the Assassins\",6.8],[\"Man Bait\",6.3],[\"The Thirteenth Hour\",6.4],[\"House of Angels: The Second Summer\",5.5],[\"Dunja\",5.2],[\"A három testör Afrikában\",5.3],[\"Shëmbja e idhujve\",8.2],[\"Darling, Stay at Home\",6.7],[\"Young Hero of Shaolin\",6.9],[\"Yadon Ki Kasam\",6.5],[\"The Usual Children\",4.0],[\"Rosy-Fingered Dawn: a Film on Terrence Malick\",6.0],[\"Boredom in Brno\",7.0],[\"Il mio miglior nemico\",6.0],[\"Mademoiselle Swing\",5.4],[\"Heldorado\",5.9],[\"Police Raid\",6.9],[\"Son of Billy the Kid\",6.8],[\"Posrednik\",6.9],[\"Ragdoll\",3.7],[\"Visibility Zero\",6.9],[\"Es herrscht Ruhe im Land\",6.1],[\"A Famosa Língua de Ouro\",4.6],[\"Frankie and Johnny\",5.5],[\"Passaporto rosso\",5.1],[\"Farewell at Dawn\",8.1],[\"The Seventh Curse\",6.7],[\"E.T. the Extra-Terrestrial\",7.9],[\"Paradise Lost\",4.5],[\"Meet the Boy Friend\",5.4],[\"My Nights with Susan, Olga, Albert, Julie, Piet & Sandra\",5.2],[\"Summer with Monika\",7.5],[\"Olsenbanden - Operasjon Egon\",7.0],[\"The Sniper\",7.1],[\"The Headline Woman\",5.8],[\"Butterfly\",4.7],[\"Trois de St Cyr\",5.3],[\"Fantômas\",5.7],[\"After the Night... Dawn\",7.4],[\"Terror Aboard\",6.5],[\"From China with Death\",6.0],[\"O epanastatis\",4.7],[\"Modesty Blaise\",5.0],[\"Everything Happens to Me\",5.8],[\"The Guys Who Put Money on Me\",7.0],[\"La burrerita de Ypacaraí\",6.5],[\"Robinson Crusoe of Clipper Island\",5.6],[\"In the City\",6.7],[\"Kinetta\",4.6],[\"Keloglan\",5.8],[\"Valarthu Mrugangal\",6.3],[\"The Little Apartment\",7.2],[\"Loves with Gravity\",4.3],[\"El capitán Malacara\",6.6],[\"Promise Me This\",6.9],[\"The Flight\",6.7],[\"Squatter's Delight\",6.4],[\"Einer vom Rummel\",4.9],[\"No Place to Land\",5.5],[\"Jeepers Creepers\",6.2],[\"The Whole Shootin' Match\",7.2],[\"Wonderful Adventures of Nils\",6.3],[\"The Star Prince\",5.5],[\"Auf immer und ewig\",6.3],[\"Rasputin and the Empress\",6.5],[\"Meet the Mobsters\",5.7],[\"Black Belt Karate\",6.2],[\"Nappily Ever After\",6.4],[\"Toolbox Murders\",5.3],[\"Devil's Highway\",3.3],[\"Mutants\",6.7],[\"Shanti Kranti\",6.5],[\"The Ceremony\",7.5],[\"The Giant\",7.1],[\"Tears of Stone\",6.6],[\"Summer of Evil\",4.3],[\"Crop Circles: Quest for Truth\",6.8],[\"Ten Fearless Men\",4.9],[\"Dharam Veer\",6.7],[\"Vulcan Junction\",7.0],[\"Mysteries of Black Magic\",6.0],[\"The Genius Club\",5.9],[\"Duel with the Devils\",5.7],[\"Krakonos a lyzníci\",6.9],[\"The Fall of Berlin\",7.3],[\"The Dark Horse\",5.2],[\"Du mou dans la gâchette\",4.5],[\"Around the World in 80 Beds\",4.0],[\"Poor as a Church Mouse\",6.7],[\"Gayracula\",4.9],[\"Creature from the Black Lagoon\",6.9],[\"Flight 971\",4.6],[\"A Soldier's Plaything\",4.3],[\"A Yank on the Burma Road\",5.6],[\"India pravile\",6.9],[\"God Died in Vain\",7.3],[\"The Jackal\",6.4],[\"Zolotoye runo\",5.4],[\"Trece entre mil\",7.2],[\"Trahir\",7.1],[\"Sandhippu\",4.3],[\"Why, Why, Tell Me Why!\",5.8],[\"Ivanhoe\",6.7],[\"Sonny\",5.6],[\"Confessions of Love\",7.7],[\"Rape Hunter: Target Woman\",4.1],[\"Honeysuckle Rose\",6.3],[\"Underground Judgement\",5.3],[\"The Unknown\",2.7],[\"Alles hört auf mein Kommando\",7.0],[\"Furyo bancho nerikan burusu\",6.0],[\"Pearls and Pigs\",6.4],[\"Comrades in Arms\",4.0],[\"Son of the Northeast\",7.3],[\"El diario íntimo de una cabaretera\",6.0],[\"Keemat: They Are Back\",5.5],[\"Babyface\",6.1],[\"Abroad with Two Yanks\",6.2],[\"Panam\",6.5],[\"Seven Deaths in the Cats Eyes\",5.7],[\"Beyond the Rising Moon\",4.8],[\"Charlie Chan in Shanghai\",6.9],[\"Adayalam\",6.5],[\"The Apostate\",6.1],[\"Prison Ball\",6.1],[\"Jayam\",6.2],[\"To thavma tis Megaloharis\",3.6],[\"Beyaz Kelebekler\",3.8],[\"Lauro Puñales\",7.0],[\"Mr. Vampire Saga IV\",6.3],[\"Les rois du sport\",5.6],[\"Blood and Wine\",6.0],[\"The Return of Peter Grimm\",6.1],[\"Kaptan Sving: Korkusuz Kaptan\",5.1],[\"Charleen\",7.3],[\"Serebryanoye revyu\",5.2],[\"Four Eyed Monsters\",6.2],[\"Portrait of a Champion\",8.6],[\"American Rickshaw\",5.0],[\"The Nature of Nicholas\",6.0],[\"Hawaiian Dream\",5.8],[\"Touch the Sound: A Sound Journey with Evelyn Glennie\",7.2],[\"I Killed That Man\",5.7],[\"Bolshaya doroga\",7.0],[\"Ladies Special\",6.3],[\"Farlig leg\",4.3],[\"White Fire\",5.7],[\"Kitamura Toukoku: Waga fuyu no uta\",5.7],[\"Heist\",3.2],[\"The Lucky Devil\",6.6],[\"The Expendables\",4.4],[\"Happy Ghost III\",6.2],[\"Kaala Samrajya\",4.8],[\"Saajan Ki Baahon Mein\",4.8],[\"Una donna ha ucciso\",6.8],[\"Antarjali Jatra\",7.3],[\"Charlotte Gray\",6.4],[\"Hellcat Mud Wrestlers\",4.5],[\"Eve\",5.5],[\"The Grand Parade\",5.6],[\"A Sporting Chance\",6.8],[\"I Live as Long as I Die\",5.9],[\"The Holy Queen\",6.3],[\"The Lady and the Sailor\",5.5],[\"At Risk\",5.0],[\"Pierlequin\",3.6],[\"Black Bandit\",6.1],[\"The Million Eyes of Sumuru\",3.7],[\"The Cat Creeps\",5.2],[\"Ram Ki Ganga\",6.3],[\"Reou-Takh\",7.6],[\"Krayat na patya\",4.1],[\"Legend of the Roller Blade Seven\",2.0],[\"The Human Stain\",6.2],[\"3° kälter\",5.4],[\"Rudin\",6.4],[\"Kinara\",6.8],[\"Illicit\",6.1],[\"Juventud sin barreras\",5.4],[\"Until Hell Is Frozen\",7.0],[\"Jungle Menace\",5.3],[\"Laila\",7.0],[\"Elisa da Rarus tavgadasavali\",4.0],[\"Sexo, pudor y lágrimas\",6.5],[\"Perfect Gift\",6.1],[\"Un tropezón cualquiera da en la vida\",5.0],[\"The River Pirates\",6.7],[\"Young Billy Young\",5.7],[\"Denial\",6.6],[\"Hunters and Gatherers\",5.4],[\"Moonstruck\",7.2],[\"Hip Hop: A Tale from the Hood\",8.0],[\"You're Only Young Once\",6.6],[\"If....\",7.4],[\"Aasoo Bane Angaarey\",3.8],[\"Samurai Vampire Bikers from Hell\",6.4],[\"The Randy Widow\",5.5],[\"Más fina que las gallinas\",4.6],[\"Jim & Piraterna Blom\",6.2],[\"Inquilab\",7.4],[\"Mitti Aur Sona\",4.9],[\"Tiger Cage II\",6.9],[\"The General's Son\",6.4],[\"Floodtide\",6.9],[\"The Evil Carabel\",6.4],[\"Soldier Child\",6.5],[\"Down Town\",4.7],[\"Botón de ancla\",5.7],[\"The Secret Kingdom\",4.7],[\"The Avenger\",5.8],[\"El sobre verde\",4.7],[\"Khoon Bas\",6.8],[\"Document of the Dead\",6.7],[\"A Man Like Eva\",5.8],[\"Ground Zero\",6.4],[\"Moment's Caress\",6.1],[\"What the #$*! Do We (K)now!?\",5.2],[\"The Barbarians\",5.0],[\"Totò cerca casa\",6.5],[\"Zenobia\",6.0],[\"Jekyll Island\",5.1],[\"Bad Karma\",3.3],[\"Speed\",7.3],[\"Nippon sanjûshi: Hakata obi shime ippon dokko no maki\",6.7],[\"Make Your Own Bed\",5.5],[\"The House of the Arrow\",6.4],[\"Three Seasons\",7.2],[\"Grief Street\",5.3],[\"Sargam\",6.5],[\"What a Small World\",5.8],[\"Pas sur la bouche\",6.5],[\"Teenage Hooker Becomes a Killing Machine\",4.3],[\"Heiße Löcher, geile Stecher\",6.5],[\"Castelul condamnatilor\",7.3],[\"Raeeszada\",4.0],[\"Temptation of a Monk\",6.4],[\"Chinna Thambi\",6.8],[\"Sinä olet kohtaloni\",4.3],[\"Violated!\",5.0],[\"How to Marry a Millionaire\",6.8],[\"Mourning Rock\",8.5],[\"Si Kabayan Mencari Jodoh\",4.7],[\"For Love and Lust\",6.6],[\"Being There\",6.7],[\"Babasina Bak Oglunu Al\",6.1],[\"In Your Dreams\",5.3],[\"The Lovers\",7.5],[\"One Girl's Confession\",6.4],[\"My Boss, My Hero\",6.2],[\"Dangerous Ground\",5.7],[\"Fast Company\",5.0],[\"The Hill\",7.8],[\"Three Men from Texas\",6.8],[\"Avenging Waters\",6.2],[\"Connie and Carla\",6.3],[\"The Seven Red Berets\",5.1],[\"Nastik\",6.7],[\"The Big Race\",6.1],[\"Ghar Mein Ram Gali Mein Shyam\",4.6],[\"Royal Vacation\",4.2],[\"Rascals on the Road\",6.8],[\"The Sin of Madelon Claudet\",6.6],[\"One Night Stand\",6.2],[\"Geceler yarim oldu\",3.4],[\"The Sixth Sense\",8.2],[\"Like Grains of Sand\",7.4],[\"Lemora: A Child's Tale of the Supernatural\",6.1],[\"Apache Rifles\",6.4],[\"Delicato\",4.1],[\"Palais royal!\",5.6],[\"Don't Turn Around, or You'll Be Sorry\",5.8],[\"Yeh Dillagi\",5.9],[\"Island of Doomed Men\",5.8],[\"Obracun\",6.9],[\"Anari\",5.4],[\"Ein Lied geht um die Welt\",6.4],[\"On the Bridge\",7.3],[\"Pas de coup dur pour Johnny\",6.2],[\"Waiter!\",6.3],[\"Qayamat: City Under Threat\",4.8],[\"Santee\",5.7],[\"The Flying Squad\",5.9],[\"Tillie the Toiler\",6.6],[\"The Front Page\",7.3],[\"Travolto dagli affetti familiari\",6.4],[\"Sartana Kills Them All\",5.5],[\"Mr. Reckless\",5.3],[\"Chances Are\",8.4],[\"Midachi: el regreso del humor\",6.4],[\"La révolte des enfants\",6.4],[\"The Secret Seven\",5.2],[\"Transatlantique\",5.6],[\"Éclair au chocolat\",5.5],[\"Anchin to Kiyohime\",5.9],[\"XxxHOLiC the Movie: A Midsummer Night's Dream\",7.1],[\"The Humpty Dumpty Man\",5.3],[\"Attila\",6.3],[\"Peppi en Kokki bij de Marine - Het geheim van kommandant Plus\",5.4],[\"Dil Diya Dard Liya\",6.2],[\"Viva Brazil\",6.4],[\"The Devil's Agent\",6.0],[\"Headlines\",6.1],[\"The Concrete Jungle\",6.8],[\"Brasa Adormecida\",6.4],[\"The Lost Angel\",3.7],[\"The Burned Barns\",6.6],[\"Two Idiots in Hollywood\",5.0],[\"The Right to Romance\",6.0],[\"Silly Billies\",6.2],[\"Chinese Roulette\",7.2],[\"Go, Go Second Time Virgin\",7.1],[\"Kanto nagare-mono\",6.4],[\"Zarak\",5.5],[\"Delicious\",6.3],[\"'C'-Man\",5.7],[\"The Callahans and the Murphys\",5.1],[\"Amir El Zalam\",5.7],[\"I Escaped from Devil's Island\",5.3],[\"Peach Boy\",5.9],[\"Limousine Drive\",4.9],[\"Young Blood, Fresh Meat\",3.3],[\"Eréndira la indomable\",6.9],[\"Pulverschnee nach Übersee\",3.8],[\"The Quiet Woman\",6.0],[\"Mass\",6.6],[\"The Johnsons\",6.0],[\"A Formula for Mayhem\",7.1],[\"The 14th Daughter of Hsin Family\",5.8],[\"Heart of a Dragon\",5.8],[\"Agent nr 1\",5.5],[\"Foreplay\",3.9],[\"Les palmes de M. Schutz\",6.8],[\"Best Seller (El Premio)\",5.4],[\"The Small Devil\",6.1],[\"Un hiver de tourmente\",4.7],[\"Mrs. Wiggs of the Cabbage Patch\",6.5],[\"Lonesome Women\",5.9],[\"This'll Make You Whistle\",6.5],[\"Once Upon a Girl....\",4.6],[\"Koroleva benzokolonki\",7.2],[\"The Seven Girls\",6.8],[\"Los amantes\",8.3],[\"Triple Cross\",6.3],[\"The Unholy Garden\",5.8],[\"Treasure Island. Captain Flint's Map\",8.1],[\"La hija de nadie\",7.2],[\"Ömrümün Tek Gecesi\",6.3],[\"The Black Pirate\",6.3],[\"Outside the Wall\",6.7],[\"Mam'zelle Spahi\",5.6],[\"3 Blind Mice\",4.3],[\"Daglar bulutlu efem\",4.6],[\"The Woman on the Beach\",6.4],[\"Marie's Sons\",5.7],[\"War Is Hell\",6.6],[\"Jak ukrást Dagmaru\",1.6],[\"Falcons\",6.0],[\"Silver Dream Racer\",5.5],[\"Carreiras\",7.4],[\"Santa Sangre\",7.5],[\"Arsène Lupin\",6.9],[\"Flaming Lead\",6.4],[\"Burger Boy's\",5.4],[\"Father Steps Out\",3.1],[\"Papai Trapalhão\",6.0],[\"Comanche Territory\",6.4],[\"The Show\",6.9],[\"The Blessed Marriage\",5.5],[\"India Song\",6.1],[\"Life Returns\",3.9],[\"Escape to Paradise\",4.8],[\"Beyond Our Dreams\",4.1],[\"Shipwrecked\",6.5],[\"Tarantella\",5.2],[\"Colorado Sunset\",6.3],[\"Katafalk\",5.4],[\"High Anxiety\",6.6],[\"Nesaa Fi Hayati\",6.9],[\"Cette malicieuse Martine\",5.8],[\"Premaloka\",7.8],[\"The Strange Case of Doctor Rx\",5.3],[\"Naan Avanillai\",7.4],[\"The Life and Death of Colonel Blimp\",8.0],[\"Pardon Mon Affaire, Too!\",6.8],[\"Things Change\",7.0],[\"Absolution\",6.5],[\"The Last Mango\",3.8],[\"The Desperadoes\",6.4],[\"You Can't Run Away from It\",5.9],[\"S.W.A.P.\",4.3],[\"Sunshine\",7.4],[\"Heart of the Rio Grande\",6.4],[\"Six-Gun Rhythm\",5.7],[\"Blusang itim\",7.2],[\"Juke box\",6.9],[\"Trapped by Boston Blackie\",6.4],[\"La madre María\",7.3],[\"Kirke og orgel\",4.9],[\"That's the Spirit\",7.2],[\"The King Steps Out\",6.2],[\"Dil Ne Jise Apna Kaha\",4.4],[\"Beggar of Love\",4.4],[\"Wir Bergler in den Bergen sind eigentlich nicht schuld, daß wir da sind\",7.9],[\"18 Who Cause a Storm\",6.7],[\"Sissi: The Fateful Years of an Empress\",6.6],[\"Naseeb\",5.4],[\"Fakers\",5.7],[\"Bumerang\",6.1],[\"Menu total\",5.1],[\"The Shadow Boxing\",6.3],[\"Tetri karavani\",7.2],[\"Sixpack Annie\",4.2],[\"Mi sei entrata nel cuore come un colpo di coltello\",4.3],[\"Girls Will Be Boys 2\",6.8],[\"Chuquiago\",6.7],[\"The Man Who Walked Alone\",5.7],[\"Abdullah from Minye\",6.5],[\"Monster from Green Hell\",3.7],[\"Gandhinagar 2nd Street\",7.7],[\"The Lady in Black\",6.9],[\"Pussycat Pussycat\",3.6],[\"Sealed Orders\",6.8],[\"American Daughter\",6.3],[\"Diario di una siciliana ribelle\",7.6],[\"Back to School\",6.7],[\"The White Raven\",4.4],[\"Soldiers of the Rock\",6.1],[\"Il ritorno d'Ulisse in patria\",8.2],[\"Sex Is Comedy\",5.7],[\"Engraçadinha\",5.6],[\"J'y suis... j'y reste\",7.0],[\"An Extraordinary Assignment\",7.1],[\"And You Thought Your Parents Were Weird\",4.8],[\"AC\\u002fDC: Let There Be Rock\",8.3],[\"The Revolt of Mamie Stover\",6.4],[\"Sweets from a Stranger\",5.2],[\"Wanted\",3.9],[\"Night of Terror\",3.6],[\"Swing\",6.1],[\"Röda dagen\",4.4],[\"99.9\",5.6],[\"Strefa ciszy\",5.5],[\"Käyntikorttini...\",5.5],[\"You Can't Take It with You\",7.8],[\"Hour of the Wolf\",7.5],[\"The 7 Grandmasters\",7.0],[\"Dance, Raja, Dance\",7.6],[\"Guilty Relationships\",4.5],[\"The Pillow Book\",6.5],[\"White Cargo\",6.0],[\"Clattering Chastity Belts\",4.3],[\"Xia nu chuan qi\",5.3],[\"Ehmedê Xanî'den: Mem û Zîn\",7.2],[\"Baby on Board\",4.5],[\"Short\",7.6],[\"Years of the Beast\",5.4],[\"Neither of Here, Neither of There\",7.0],[\"Girl on the Run\",5.1],[\"Charli\",5.1],[\"Seoul\",5.5],[\"My Brilliant Career\",7.1],[\"Refais-le moi encore\",2.2],[\"The Miracle\",6.4],[\"Temptation Harbor\",7.1],[\"The Ambush\",6.6],[\"The House on Carroll Street\",6.2],[\"Soriton no akuma\",6.0],[\"Angkor: Cambodia Express\",5.2],[\"The Forgotten\",7.5],[\"Upkar\",7.6],[\"The Warning\",5.6],[\"Quo Vadis?\",6.1],[\"Johnny Skidmarks\",5.5],[\"Three on a Match\",7.1],[\"The Wayward Cloud\",6.5],[\"Chelovek ne sdayotsya\",5.4],[\"The Filth and the Fury\",7.6],[\"Southern Comfort\",7.2],[\"Un mauvais garçon\",6.5],[\"The Trip\",7.0],[\"Soldaterkammerater\",6.3],[\"Eagle's Claws\",6.2],[\"One More Train to Rob\",5.7],[\"The Violent Four\",7.0],[\"La casa de las muchachas\",5.0],[\"Non perdiamo la testa\",5.1],[\"Reyhaneh\",5.6],[\"Thoroughbreds Don't Cry\",6.3],[\"April's Shower\",5.0],[\"The Wolf Man\",7.2],[\"Sin\",4.5],[\"Lonely in America\",4.7],[\"Django Strikes Again\",5.3],[\"In the Army Now\",5.0],[\"Sex and Astrology\",4.4],[\"Mozafar\",6.6],[\"Trying to Kiss the Moon\",6.8],[\"Expedición Atlantis\",8.5],[\"La vieille dame indigne\",7.1],[\"Operation Trojan Horse\",5.6],[\"VII. Olivér\",6.5],[\"Ill Fated\",6.6],[\"Sons of Provo\",5.9],[\"Metal Messiah\",5.5],[\"The King's Guard\",3.4],[\"Ruby\",5.5],[\"Blood on My Shoes\",5.5],[\"The Naked Runner\",5.9],[\"The Night Walker\",6.3],[\"L'indic\",5.3],[\"El reprimido\",4.2],[\"A Guy Named Joe\",6.9],[\"El muchacho de Durango\",6.9],[\"Born for Hell\",5.2],[\"Pölynimurikauppiaat\",7.6],[\"Thirst\",5.7],[\"The Dark Side of the Moon\",4.9],[\"Life\",7.1],[\"You Have to Run Fast\",6.0],[\"The Pretenders\",7.3],[\"Killpoint\",4.4],[\"Meri Adaalat\",5.3],[\"Odinozhdy odin\",6.8],[\"A Bit of Luck\",7.0],[\"Soorya Manasam\",7.6],[\"The Magic Flute\",6.5],[\"Le complexe de Toulon\",7.5],[\"1 2 3\",4.9],[\"Woman on the Run\",7.2],[\"The Forest\",4.9],[\"Miles Apart\",6.4],[\"L'innocente Casimiro\",5.3],[\"Home on the Prairie\",5.8],[\"Harlot\",6.3],[\"Memoria de los silenciados: El baile rojo\",7.4],[\"Rag Tale\",3.8],[\"Grzeszny zywot Franciszka Buly\",6.4],[\"Heintje - Mein bester Freund\",4.4],[\"Roaring Roads\",5.1],[\"The Cobra\",4.4],[\"The Wind\",2.9],[\"Anthony Adverse\",6.3],[\"Quantum Quest: A Cassini Space Odyssey\",5.1],[\"Love on the Rocks\",5.6],[\"Amor a la española\",4.5],[\"Disputed Passage\",6.4],[\"Brief Season\",6.0],[\"The Flame\",6.4],[\"The Jet Benny Show\",3.6],[\"Ways of Rebetiko\",8.0],[\"Village in the Mist\",6.6],[\"Harem Girls\",5.4],[\"Lost in the Stars\",6.3],[\"Der Sexbaron von St. Pauli\",4.7],[\"Golden Queen\",6.1],[\"Amusement\",4.9],[\"Fig Leaves\",6.1],[\"Sporting Chance\",5.0],[\"Conversations with Other Women\",6.9],[\"Fantozzi 2000 - La clonazione\",4.5],[\"Il trasformista\",4.3],[\"Mouths and Rabbits\",7.4],[\"Der fremde Vogel\",6.1],[\"Legends of the Fall\",7.5],[\"Birthday Gift 2\",6.6],[\"Follow Me Outside\",5.5],[\"The Age for Love\",6.5],[\"Zero: The Inside Story\",6.8],[\"The Street Car Named Desire\",5.4],[\"Outside the Law\",6.5],[\"'O re\",6.4],[\"Down by Love\",6.5],[\"L'engrenage\",5.1],[\"Night of the Occultist\",5.6],[\"Bikini Med School\",2.0],[\"La razón de la culpa\",6.8],[\"City War\",6.3],[\"Trahir\",7.1],[\"Scarecrow\",5.4],[\"Doroga na Ryubetsal\",6.1],[\"Le petomane: Fin de siècle fartiste\",6.9],[\"Expensive Tastes\",6.0],[\"The Widow from Chicago\",6.4],[\"The Road with the Acacias\",6.1],[\"Philharmonic\",7.0],[\"Attack in the Pacific\",6.5],[\"Der fliegende Holländer\",6.9],[\"The Tiger of Eschnapur\",6.0],[\"The Missing\",6.5],[\"Happy Feet\",6.4],[\"I thysia mias gynaikas\",3.3],[\"Return from the Other World\",5.5],[\"High Society\",6.9],[\"L'uomo più velenoso del cobra\",5.0],[\"Il était une fois dans l'oued\",5.0],[\"Davon träumen alle Mädchen\",5.2],[\"Bel Air\",7.2],[\"Maxime\",6.4],[\"O Diabo a Quatro\",6.3],[\"Meera\",6.6],[\"Apolinar\",5.6],[\"Destiny\",7.6],[\"They Drive by Night\",7.2],[\"Left Food Forward on the Beat\",6.5],[\"Valdez Is Coming\",6.7],[\"Ai yu kuang chao\",4.0],[\"Jungle Adventure Campa Campa\",5.1],[\"I Murder Seriously\",5.5],[\"Female Gym Coach: Jump and Straddle\",5.0],[\"Historia de 'S'\",3.5],[\"Song of the Street\",6.3],[\"Day of Wrath\",8.1],[\"Dallas Schoolgirls\",5.8],[\"Stagecoach to Denver\",5.7],[\"Shahenshah\",6.3],[\"Bewitched\",5.6],[\"Gyalog a mennyországba\",7.0],[\"World of Henry Paris\",4.8],[\"Zoo in Budapest\",6.7],[\"Tie san jiao\",5.8],[\"Breaking News\",6.7],[\"Puritan\",5.8],[\"Medusa\",5.9],[\"Roman i Francheska\",5.5],[\"Francis Goes to West Point\",6.2],[\"California in '49\",4.6],[\"The Unfaithfuls\",6.8],[\"Three Comrades\",7.1],[\"New York, New York\",6.6],[\"The Master Key\",6.0],[\"Non si scrive sui muri a Milano\",4.3],[\"The Three Faces of Terror\",4.2],[\"Mr. Vincent\",6.4],[\"Wake Up Love\",6.8],[\"The Life and Times of Grizzly Adams\",6.7],[\"Anna Liisa\",6.2],[\"Death Junction\",5.2],[\"I Shall Not Be Removed: The Life of Marlon Riggs\",7.6],[\"Run Like Hell\",3.9],[\"The Demo Crew\",5.1],[\"Loser\",7.4],[\"Ricordare Anna\",7.0],[\"Bidyapati\",6.6],[\"The Life and Ascension of Yuras Bratchik\",7.1],[\"Monster in a Box\",7.5],[\"Nagi El-Ali\",6.7],[\"Morálka paní Dulské\",7.5],[\"Malchishku zvali kapitanom\",7.4],[\"Art for Teachers of Children\",6.2],[\"Yeh Hai Jalwa\",4.8],[\"Blessure\",4.5],[\"Five the Hard Way\",1.8],[\"Tell It to the Marines\",7.1],[\"The Outrage\",6.2],[\"Zwei Herzen voller Seligkeit\",5.4],[\"Killer of Snake, Fox of Shaolin\",4.7],[\"Long Weekend\",6.5],[\"Big Zapper\",4.8],[\"How Did a Nice Girl Like You...\",4.9],[\"The Stubborn Bride\",4.8],[\"The Texas Chainsaw Massacre 2\",5.6],[\"Chain Gang\",5.1],[\"Is Anybody There?\",4.2],[\"Rebels\",6.8],[\"Cautatorii de aur\",5.8],[\"Muscle Bound\",8.1],[\"The Hour of the Wolf\",6.2],[\"Laura's Star\",6.3],[\"T-Bird at ako\",6.4],[\"The Demise of Herman Durer\",6.7],[\"Il monello della strada\",6.1],[\"The Serpent\",6.2],[\"Lord Hansi\",3.4],[\"Messenger\",7.5],[\"Les patates\",5.4],[\"Birth\",6.2],[\"Good Morning, Vietnam\",7.3],[\"Ashes and Diamonds\",7.7],[\"The St. Valentine's Day Massacre\",6.6],[\"Americana\",6.4],[\"Patanga\",6.4],[\"Golpe a la mafia\",3.9],[\"Roman\",5.4],[\"O. Henry's Full House\",7.2],[\"Love Goes Up and Down\",5.6],[\"Funerària independent\",5.2],[\"Jaane Bhi Do Yaaro\",8.3],[\"Above & Beyond\",4.4],[\"Curse of the Faceless Man\",4.8],[\"Ecstasy\",6.6],[\"Yagyû bugeichô: Sôryû hiken\",7.0],[\"Dreamer\",6.8],[\"To Sleep So as to Dream\",7.2],[\"Where the Spirit Lives\",7.5],[\"Fatal Exam\",3.7],[\"The Saragossa Manuscript\",7.7],[\"Battle Beyond the Stars\",5.5],[\"Carry on Cowboy\",6.2],[\"Dark Nova\",4.1],[\"The Enigma of Love\",6.5],[\"Welcome Stranger\",3.4],[\"Dum-Bom\",4.8],[\"Born American\",4.3],[\"Made in U.S.A\",6.2],[\"The Kindred\",5.7],[\"Clodo\",3.6],[\"The Animals\",7.3],[\"La balance\",6.5],[\"Headspace\",4.6],[\"Bride by Mistake\",6.3],[\"The Forward Pass\",5.0],[\"Alamat ng ninja 'kuno'\",5.7],[\"A Few Days from the Life of I.I. Oblomov\",7.6],[\"Murder Will Out\",5.1],[\"Love in Singapore\",5.9],[\"Enemy Territory\",6.2],[\"Eight Hundred Bullets\",6.3],[\"Lady by Choice\",6.5],[\"Kiss Toledo Goodbye\",4.7],[\"Verso sud\",6.9],[\"Day of the Assassin\",4.1],[\"Pinocchio's Revenge\",4.2],[\"Paris\",7.1],[\"Kader Yolculari\",6.1],[\"Vision Quest\",6.7],[\"The Boy Who Could Fly\",6.6],[\"Love Battlefield\",6.6],[\"The Great Mike\",5.3],[\"Letters from Karelia\",7.2],[\"Endless Horizons\",6.6],[\"Bu su\",7.0],[\"La ripetente fa l'occhietto al preside\",4.8],[\"Izkustvenata patitza\",5.3],[\"The Best of Everything\",6.6],[\"Summer's Gone\",6.4],[\"Coming Attractions\",6.3],[\"Jaya Ganga\",7.1],[\"Dil Jo Bhi Kahey...\",4.6],[\"Minchina Oata\",8.3],[\"John Ermine of Yellowstone\",4.2],[\"Son Nefes\",4.3],[\"Dalagang bukid\",7.1],[\"The Phantom City\",4.6],[\"Hard to Handle\",6.6],[\"Assault! Jack the Ripper\",6.1],[\"The Monkey's Paw\",5.6],[\"¡Persíguelas y... alcánzalas!\",5.5],[\"Love Wind Love Song\",6.2],[\"A Killer Within\",5.0],[\"Alle Tage ist kein Sonntag\",6.0],[\"TMNT\",6.2],[\"The Carabineers\",6.7],[\"Rage\",6.1],[\"Waterloo Bridge\",7.7],[\"Tour de Force\",6.6],[\"The Shepherd of the Hills\",6.9],[\"Bubbles\",9.2],[\"Legend of the Fox\",6.6],[\"Those Three French Girls\",5.0],[\"Vous ne l'emporterez pas au paradis\",5.6],[\"Give God a Chance on Sunday\",5.7],[\"At the Mercy of Men\",7.0],[\"La France est un empire\",4.4],[\"Me vkhedav mzes\",7.6],[\"You Are a Widow, Sir!\",7.4],[\"Haunted School 3\",6.7],[\"Hi-Riders\",4.9],[\"Bambi's Youth\",5.6],[\"Aysecik: Hayat Sevince Güzel\",5.8],[\"Joan of Paris\",6.8],[\"Casanova Brown\",6.2],[\"The Singer and the Dancer\",6.1],[\"Magic Lighter\",6.2],[\"Autumn (Yet) Strong Love\",4.1],[\"Sky Captain\",5.6],[\"Seventeen Days to Execution\",6.2],[\"Tell the Truth and Run: George Seldes and the American Press\",7.7],[\"The Solid Gold Cadillac\",7.5],[\"Tarkan: Güçlü Kahraman Kolsuz Kahraman'a Karsi\",6.5],[\"Don't Touch the White Woman!\",6.1],[\"Vincent Price: The Sinister Image\",8.2],[\"Madonna: A Case of Blood Ambition\",4.9],[\"Presage\",7.3],[\"Happy End\",5.3],[\"Red Road\",6.8],[\"The Cheaters\",6.7],[\"Playa azul\",3.8],[\"Adolescente, sucre d'amour\",6.3],[\"Neelakkuyil\",7.8],[\"Sequins\",6.9],[\"Iste Hayat\",6.0],[\"Ali\",6.7],[\"Same Old Song\",7.3],[\"Danger: Diabolik\",6.5],[\"Het einde van de reis\",5.4],[\"Tenacious D in the Pick of Destiny\",6.8],[\"The Magnet\",5.7],[\"Two Summers\",7.1],[\"Voice Over\",6.4],[\"@Festivbercine.ron\",7.1],[\"Alajadi\",4.5],[\"The Stone Boy\",6.5],[\"White Boy\",3.2],[\"The Boles Murders\",9.6],[\"Fighting Lawman\",5.9],[\"Dvoji zivot\",4.6],[\"Adult Fun\",7.0],[\"Street Corner\",5.2],[\"Chobizenesse\",5.6],[\"The Nameless Knight\",5.5],[\"Keskea rõõmud\",7.3],[\"Watching the Detectives\",6.2],[\"Bezaubernde Arabella\",6.6],[\"Kids World\",5.2],[\"Love in Karnak\",7.2],[\"Puddle Cruiser\",5.5],[\"The Last of the Knucklemen\",7.0],[\"Perils of the Sentimental Swordsman\",6.1],[\"The Unconquered\",7.0],[\"Sagai\",6.6],[\"Maharaja\",4.3],[\"Marooned\",5.9],[\"Further Up the Creek\",5.6],[\"Devadoothan\",7.7],[\"Leader of the Band\",5.7],[\"Chameleon\",7.6],[\"Tano da morire\",6.5],[\"Club Le Monde\",5.7],[\"Fangs of the Arctic\",5.8],[\"One 11 and 103\",6.6],[\"Having Wonderful Crime\",6.0],[\"Historias violentas\",7.1],[\"Gods and Monsters\",7.3],[\"Name the Man!\",6.8],[\"9 Rapazes e 1 Cão\",3.8],[\"Ma and Pa Kettle at Home\",6.8],[\"Nessie, das verrückteste Monster der Welt\",3.4],[\"Half a Sinner\",6.3],[\"Bell Witch Haunting\",3.9],[\"His Majesty, the Scarecrow of Oz\",5.3],[\"Explosion\",5.2],[\"Passenger\",6.2],[\"The Criminal on Vacation\",5.7],[\"The Norseman\",3.5],[\"Eden\",4.7],[\"The College Coquette\",5.1],[\"Der Bumsladen-Boß\",3.8],[\"Alias the Lone Wolf\",7.4],[\"Julie's Spirit\",6.6],[\"Mkholod sikvdili modis autsileblad\",7.6],[\"An Eternal Combat\",5.7],[\"Pobeda\",6.0],[\"A Girl in Every Port\",6.5],[\"Alkomsareyat Alfatinat\",5.2],[\"Schoolgirl's Reunion\",5.2],[\"The Dragon and the Tiger\",6.8],[\"The Marriage Certificate\",6.4],[\"Return with Honor: A Missionary Homecoming\",4.4],[\"DJ Hound Dog\",5.4],[\"Macunaima\",6.8],[\"Do Phool\",7.1],[\"Family\",5.3],[\"The Jazz Age\",8.1],[\"40 Guns to Apache Pass\",5.7],[\"Ghosts of Cité Soleil\",6.9],[\"Oh... Rosalinda!!\",6.1],[\"Cross the Chishui River Four Times\",5.7],[\"Crazy as Hell\",5.8],[\"La Marie du Port\",6.6],[\"Something Like It\",6.4],[\"Phone Booth\",7.1],[\"Dracula's Fiancee\",4.7],[\"Tainah, an Amazon Adventure\",5.2],[\"Victims of Persecution\",2.6],[\"Yo amo, tu amas, nosotros...\",6.2],[\"Killer Klowns from Outer Space\",6.2],[\"The Sea Spoilers\",6.0],[\"The People vs. Larry Flynt\",7.3],[\"Oseam\",6.9],[\"Szívzür\",6.4],[\"Dead Men Walk\",4.8],[\"Auditions\",4.5],[\"The French Revolution\",7.7],[\"Brazdat\",4.5],[\"My Little Eye\",5.5],[\"Love Secrets of the Kama Sutra\",5.2],[\"Fossilized Wilderness\",4.7],[\"No Man of Her Own\",7.4],[\"Her Married Lover\",5.2],[\"No Man's Land\",6.2],[\"Szuler\",5.9],[\"Monsoon\",4.5],[\"The Skin Game\",5.7],[\"Outlaw Trail\",5.6],[\"Khuje Berai\",6.6],[\"Vintage Model\",6.7],[\"Kiss of the Piranha Woman\",4.5],[\"Irma la mala\",5.6],[\"Blue Panther\",5.3],[\"The Bachelor's Dreams\",3.2],[\"Best of the Best 3: No Turning Back\",4.9],[\"Beauty and the Beast\",7.0],[\"A Blueprint for Murder\",6.7],[\"The Code of the Scarlet\",4.8],[\"La leyenda del unicornio\",4.7],[\"Dead 4: Blood + Guts\",2.6],[\"The Florentine Dagger\",5.9],[\"Strange Rampage\",5.1],[\"Cycle Vixens\",4.6],[\"Bronco Buster\",6.0],[\"Khaidi No. 786\",6.6],[\"Together Again\",5.9],[\"(Paris: XY)\",4.8],[\"Red Scorpion 2\",3.6],[\"The Philadelphia Experiment\",6.1],[\"Silk Stockings\",6.8],[\"The Danger Game\",6.9],[\"Long-Term Relationship\",6.0],[\"K.O.\",6.7],[\"The Sea Wolf\",7.5],[\"Brigade Anti Gangs\",5.5],[\"Gift o' Gab\",3.6],[\"Hell Hunters\",4.3],[\"Tsuruhachi and Tsurujiro\",6.9],[\"Barrier\",6.8],[\"The Intruder\",5.6],[\"Diplomatic Immunity\",4.6],[\"Harrington's Notes\",7.1],[\"Radio Lover\",6.5],[\"The Invincible Superguy\",4.7],[\"Inspector Maigret\",7.2],[\"Beyond Victory\",5.9],[\"The Hitchhiker's Guide to the Galaxy\",6.7],[\"La primula bianca\",5.8],[\"John Hus\",7.0],[\"Invaders from Mars\",6.2],[\"The Good Bad Guy\",4.6],[\"The Homecoming\",5.3],[\"Charles Mingus: Triumph of the Underdog\",7.4],[\"Blood of the Vampire\",5.5],[\"The Return of the Forest Monster\",6.4],[\"Motylem jestem, czyli romans czterdziestolatka\",5.6],[\"Carmen 1945\",6.1],[\"Shadow of the Eagle\",3.6],[\"The Flor Contemplacion Story\",7.0],[\"Tribute to a Bad Man\",6.7],[\"Passage West\",6.1],[\"The Young Master\",7.0],[\"Land of Fear\",8.2],[\"Shame\",8.0],[\"Getting Even\",4.5],[\"O Cangaceiro Trapalhão\",5.9],[\"En fremmed piges dagbog\",5.2],[\"Written on the Wind\",7.3],[\"Alive\",6.1],[\"Les irréductibles\",5.5],[\"Poseban tretman\",7.3],[\"Kerouac, the Movie\",6.8],[\"The Lost Track\",5.4],[\"Dangerous Money\",6.2],[\"Wagon Tracks West\",7.2],[\"Pioneers of the West\",6.9],[\"My American Uncle\",7.6],[\"Pacific Rendezvous\",5.8],[\"Boyanskiyat maystor\",7.1],[\"Interstate 84\",5.2],[\"The Adventures of Jane\",3.7],[\"Lion of Oz\",5.6],[\"Pueblo sin suerte\",6.2],[\"The Life of Moses\",5.2],[\"Hülya\",2.8],[\"Utang ni Tatang\",8.2],[\"Hahó, Öcsi!\",6.4],[\"Los hombres de Lupe Alvírez\",5.6],[\"Prologue\",6.6],[\"The AIDS Show\",7.3],[\"Der Sprung ins Leben\",5.2],[\"Jeg mødte en morder\",6.0],[\"The Empire of Dracula\",5.4],[\"The Big Bluff\",5.7],[\"Kill the Referee\",6.1],[\"Het bittere kruid\",5.9],[\"Gentleman\",7.8],[\"So Red the Rose\",6.3],[\"A Good Death Beats a Dull Life\",5.2],[\"Aska kinim var\",5.7],[\"Elektra\",4.7],[\"15: The Movie\",6.1],[\"Enchanted Island\",4.8],[\"The Blue Lamp\",6.8],[\"Scissere\",7.4],[\"The Brazen Women of Balzac\",4.6],[\"Taboo: The Single and the LP\",7.2],[\"Una vez, un hombre...\",6.7],[\"Roxanne\",6.6],[\"Once You Kiss a Stranger...\",5.5],[\"Devil Monster\",2.1],[\"Greetings from the Shore\",5.8],[\"Cutthroat Island\",5.7],[\"Arslanlarin dönüsü\",4.8],[\"Büyük Kin\",5.7],[\"Highway Patrolman\",7.1],[\"Is Paris Burning?\",6.8],[\"Ottsy i deti\",6.7],[\"Opal Dream\",6.5],[\"Jai Santoshi Maa\",6.5],[\"Assault on Fort Texan\",4.7],[\"The Rocking Horse Winner\",7.2],[\"All Souls Day: Dia de los Muertos\",3.7],[\"I tre ladri\",5.9],[\"Apne Dushman\",6.4],[\"Alive and Kicking\",6.7],[\"Little Orphan Sammy\",5.2],[\"Varan\",5.3],[\"Network\",8.1],[\"Zilli Nazife\",3.9],[\"The Hellions\",5.9],[\"Beglets iz Yantarnogo\",6.6],[\"Stark Fear\",5.4],[\"Gow\",5.8],[\"Hustler White\",5.8],[\"Poklad rytíre miloty\",5.6],[\"Bringing Rain\",5.4],[\"Daybreak\",7.4],[\"Honor\",4.2],[\"Invitation\",6.9],[\"Fear of the Dark\",4.3],[\"La gitana y el charro\",4.6],[\"Shiver\",5.1],[\"The Love of Three Oranges\",5.4],[\"Welcome, or No Trespassing\",7.8],[\"Los hermanos machorro\",8.4],[\"Düsman Yollari Kesti\",6.9],[\"Spider Woman\",5.6],[\"James and the Giant Peach\",6.7],[\"Fist of Fury 1991 II\",6.5],[\"O Primo do Cangaceiro\",8.6],[\"X Marks the Spot\",5.6],[\"The 3rd Voice\",6.7],[\"Le olimpiadi dei mariti\",6.1],[\"S. D. U. - Mission in Mission\",5.2],[\"L'ange et la femme\",5.9],[\"Santa Claus Conquers the Martians\",2.8],[\"Magdalena\",4.8],[\"Newman's Law\",6.2],[\"Old Believers\",7.8],[\"Skin and Bones\",6.8],[\"À Tout de Suite\",6.4],[\"Zamknac za soba drzwi\",6.3],[\"A Gathering of Eagles\",6.1],[\"Devochka na share\",6.7],[\"Somos los mejores\",7.0],[\"Adolf i eld och lågor\",4.1],[\"The Big Kahuna\",6.5],[\"O Gênio do Sexo\",4.5],[\"The Impossible Mr. Pipelet\",5.7],[\"Savage Dawn\",5.1],[\"Na otdykhe\",5.7],[\"Çilginlar\",4.8],[\"Trust the Man\",5.7],[\"Boulevard Nights\",6.4],[\"Pati Patni Aur Woh\",7.0],[\"The Ride\",6.5],[\"The Mad Bunch\",3.3],[\"Una mujer para los sabados\",2.7],[\"Pasiones tormentosas\",6.0],[\"Stormy Waters\",7.2],[\"The Eleven O'Clock Woman\",6.5],[\"Mast\",5.4],[\"Ispanska muha\",6.2],[\"Cowboy Blues\",7.2],[\"The Long Darkness\",7.4],[\"Blacks and Jews\",7.4],[\"Payoff\",4.6],[\"Fulfillment, Something Worth Remembering\",4.8],[\"Dirty Affair\",6.8],[\"The Invisible Informer\",6.6],[\"Milagro en el barrio\",6.5],[\"Fei long wang zi po qun yao\",5.6],[\"Chomana Dudi\",8.2],[\"Thief of Dolls\",6.3],[\"Beauty and the Breast\",5.1],[\"Because, Because of a Woman\",6.5],[\"The Crimson Ghost\",6.7],[\"Pechki-lavochki\",7.5],[\"Brazil: A Report on Torture\",7.6],[\"Stalked\",5.2],[\"inter.m@tes\",4.9],[\"Samurai Fiction\",7.2],[\"Migove v kibritena kutiyka\",7.8],[\"Prisoner of the Volga\",5.4],[\"Sista ringen\",4.8],[\"Bad Girls II\",6.7],[\"Picardía mexicana: número dos\",6.9],[\"Courage of the West\",6.5],[\"Diary of a Kamikaze\",5.4],[\"Autumn Sonata\",8.1],[\"Escape to Life: The Erika and Klaus Mann Story\",6.7],[\"Rainbow Boys: The Movie\",5.8],[\"Double Deal\",4.6],[\"De prijs van overleven\",9.2],[\"The Good Guys and the Bad Guys\",6.1],[\"Pink Palace, Paradise Beach\",7.4],[\"Au suivant!\",4.5],[\"A Very Honorable Guy\",6.0],[\"Hilary and Jackie\",7.3],[\"Penitentiary II\",4.5],[\"Otello\",7.7],[\"Mashenka\",7.3],[\"All'armi siam fascisti!\",7.2],[\"Sí, quiero...\",5.6],[\"Countryman\",6.6],[\"The Yellow Rolls-Royce\",6.4],[\"Niebezpieczny romans\",6.4],[\"A Man's Head\",7.1],[\"Gan yan gwai\",5.7],[\"Fearless\",7.6],[\"L'homme perché\",7.0],[\"Winter Bay\",5.0],[\"Unsubdued Slaves\",6.1],[\"Bilyy ptakh z chornoyu oznakoyu\",7.5],[\"Mexicano hasta las cachas\",7.2],[\"Fire!\",7.2],[\"Forrest Gump\",8.8],[\"Kukk Khata Khuni\",5.5],[\"Det grodde fram\",7.7],[\"Thikana\",5.8],[\"Kath Putli\",6.7],[\"August\",5.3],[\"Missiamma\",7.9],[\"Raging Angels\",3.3],[\"The Fantastic Four\",3.8],[\"Princess Cinderella\",6.4],[\"Pózne popoludnie\",5.6],[\"A Sailor on Horseback\",5.0],[\"Wahan Ke Log\",5.6],[\"Mardi Gras Massacre\",4.0],[\"Taxi\",6.4],[\"The Great Treasure Hunt\",5.3],[\"Close to Heaven\",4.6],[\"Blonde Comet\",4.9],[\"Az se vrátís\",6.8],[\"Step Across the Border\",8.0],[\"Love\",5.1],[\"Have a Heart\",6.3],[\"The Unknown Policeman\",7.5],[\"Losing Control\",4.1],[\"Gurbet\",6.1],[\"Love Takes Flight\",6.2],[\"When Saturday Comes\",6.0],[\"The Treasure of San Gennaro\",6.9],[\"The Sarah Balabagan Story\",6.0],[\"Nafaka\",6.8],[\"The Oregon Trail\",5.2],[\"Born Romantic\",6.4],[\"Star Babe\",4.4],[\"The Fireball\",5.6],[\"Inimene, keda polnud\",6.5],[\"Bob's Weekend\",5.4],[\"The Last Venetians\",8.4],[\"Eden and After\",6.3],[\"To Sleep So as to Dream\",7.2],[\"Janete\",5.8],[\"Grubstake\",5.3],[\"Silence\",7.1],[\"I Want to Live Under the Sun\",3.7],[\"Life Is to Whistle\",6.5],[\"Carry on Cowboy\",6.2],[\"Videoke King\",7.3],[\"Mamma's Boy\",7.0],[\"Xi xiang feng\",6.4],[\"Men of the Sky\",7.4],[\"Gott ist ein toter Fisch\",4.9],[\"Shout\",5.3],[\"Tarzan and the Huntress\",6.0],[\"Ghoulies II\",4.7],[\"The Game of Their Lives\",6.1],[\"Papaflessas\",7.0],[\"Käuzchenkuhle\",7.1],[\"Invisible: The Chronicles of Benjamin Knight\",4.1],[\"Comme les anges déchus de la planète Saint-Michel\",7.1],[\"I Can No Longer Hear the Guitar\",6.9],[\"The Embryo Hunts in Secret\",6.9],[\"PT Raiders\",6.7],[\"The Devil Makes Three\",6.2],[\"Honolulu Hustle\",3.5],[\"The Man Who Envied Women\",6.5],[\"Tangier Cop\",6.7],[\"Tides of Passion\",6.3],[\"The Blob\",6.3],[\"With Babies and Banners: Story of the Women's Emergency Brigade\",7.0],[\"P'al otro lado\",5.9],[\"The King on Main Street\",6.7],[\"The Candy Tangerine Man\",6.0],[\"Marianne Bouquet\",5.4],[\"Agar Tum Na Hote\",6.2],[\"The Hypnotist\",6.4],[\"Cross Fire\",5.8],[\"Blues za Saro\",6.2],[\"The Lyons Abroad\",6.3],[\"Sinvergüenza pero honrado\",7.6],[\"Bar, El Chino\",6.4],[\"Out on a Limb\",6.2],[\"High Voltage\",4.5],[\"Boricua's Bond\",3.6],[\"Vkus khalvy\",4.7],[\"Terror Express\",5.0],[\"Identity Kills\",6.3],[\"Superman\",3.6],[\"Wings of the Morning\",2.5],[\"Trotta\",7.8],[\"The Swan and the Wanderer\",6.6],[\"Casa dell'amore... la polizia interviene\",4.4],[\"The Super Weapon\",5.8],[\"Khoon Bhari Maang\",6.6],[\"Superbeast\",3.2],[\"Birdcage Inn\",7.0],[\"Women in the Wind\",6.0],[\"Blood of Dracula's Castle\",3.6],[\"Kaanoon Ki Awaaz\",8.3],[\"The Sarah Balabagan Story\",6.0],[\"Godzilla Against Mechagodzilla\",6.6],[\"Haaviston Leeni\",5.0],[\"Turn the Other Cheek\",6.3],[\"Those High Grey Walls\",6.3],[\"You're Not So Tough\",6.6],[\"West of Santa Fe\",5.2],[\"Maciste in Africa\",5.4],[\"Kriminalassistent Bloch\",6.3],[\"Le fabuleux voyage de l'ange\",4.5],[\"Murder in Times Square\",6.1],[\"Camino del mal\",6.1],[\"White Sister\",5.5],[\"Odd Couple\",7.1],[\"The Vicar of Bray\",5.5],[\"Treasure Island\",6.7],[\"Love Triangle\",3.3],[\"Crooner\",5.9],[\"Hawaiian Buckaroo\",7.9],[\"Drunken Monkey\",5.8],[\"The Beauty's Cheek\",5.4],[\"Sunsets\",6.4],[\"Werewolf of London\",6.3],[\"The Bolshoi Ballet\",7.1],[\"All Star Cartoon Revue\",4.2],[\"Herr Collins äventyr\",4.8],[\"Der fliegende Holländer\",6.9],[\"Blondie's Secret\",6.5],[\"Twin Beds\",5.4],[\"The Duchess of Plakendia\",6.5],[\"A Sensible Obsession\",5.6],[\"King of the Corner\",5.8],[\"Best Laid Plans\",6.1],[\"Marlowe\",6.4],[\"Wheels\",7.5],[\"The Rhino Brothers\",6.0],[\"Loma\",5.6],[\"Fighting Texans\",6.5],[\"Bingo\",6.3],[\"Copacabana\",6.1],[\"Netrino\",4.7],[\"Morvern Callar\",6.8],[\"Love in the Sand Dunes\",6.1],[\"Love First Year\",6.4],[\"La chanson de l'adieu\",7.5],[\"Pirate Submarine\",5.9],[\"He Hired the Boss\",5.7],[\"Vals zolotykh teltsov\",6.4],[\"Hercules in the Valley of Woe\",4.9],[\"Hold Your Man\",7.7],[\"The Great Skycopter Rescue\",4.7],[\"Colombia Connection\",6.9],[\"You and Me Against the World\",6.7],[\"Housekeeping\",7.1],[\"Los gatilleros del diablo\",7.7],[\"Street of Chance\",6.3],[\"Dead & Buried\",6.5],[\"Tsimbireli papa\",6.8],[\"Abie's Irish Rose\",5.3],[\"El fanfarrón: ¡Aquí llegó el valentón!\",7.6],[\"Abar\",4.2],[\"Beauty and the Beast\",5.8],[\"The 400 Blows\",8.0],[\"Öp Beni\",4.4],[\"The Hostile Brothers\",4.0],[\"Huk!\",5.9],[\"Amalia\",7.2],[\"Miami Blues\",6.4],[\"I Will Kill You, Wolf\",6.1],[\"Sárga kaszinó\",5.4],[\"Gigolo Club\",4.4],[\"Hugo: The Movie Star\",5.4],[\"Operation Diplomat\",6.3],[\"Discretion Assured\",4.8],[\"Ne znam, ne chuh, ne vidyah\",7.9],[\"Zogi chiri margebelia\",7.3],[\"Carnival of Blood\",3.8],[\"Women of the Chosun Dynasty\",5.9],[\"Kenpei to yûrei\",6.2],[\"The Freshman\",7.5],[\"Clear Skies\",7.2],[\"Shipmates Forever\",6.0],[\"The Immigrant\",6.2],[\"Shuai gui qiao qiang jiao\",5.9],[\"Let the Devil Wear Black\",5.0],[\"O Jerusalem\",6.0],[\"L'Atlantide\",5.2],[\"Shuang feng ji yuan\",5.9],[\"The Being\",4.4],[\"Bayside Shakedown 2\",5.9],[\"Kárate a muerte en Torremolinos\",3.6],[\"Devil's Canyon\",5.4],[\"Suddenly, Last Summer\",7.5],[\"Càlamo\",5.0],[\"El día de los albañiles III\",5.2],[\"Aventures extra-conjugales\",4.8],[\"A Hora Marcada\",6.6],[\"Oru Sindoora Pottinte Ormaykku\",7.0],[\"Crimson Lights\",2.1],[\"Bulgarian Lovers\",5.8],[\"Munna Bhai M.B.B.S.\",8.2],[\"The Kingdom\",6.7],[\"Evening Primrose\",6.8],[\"Let Them Talk\",5.5],[\"The White Hell of Pitz Palu\",6.4],[\"Frisco Sal\",5.6],[\"Savannah Smiles\",7.1],[\"Who's Afraid of Zorro\",5.8],[\"Do Not Disturb\",4.9],[\"Woman Racket\",6.4],[\"Cheyenne Warrior\",6.3],[\"La ragazzola\",7.8],[\"Jeunes filles de Paris\",5.4],[\"Flesh Suitcase\",6.5],[\"Romance musical\",7.2],[\"Johnny Frenchman\",6.3],[\"Catherine of Russia\",5.1],[\"Marie\",6.6],[\"Whiskey School\",6.0],[\"London to Brighton\",6.9],[\"Olga's Girls\",5.1],[\"Yaraana\",4.2],[\"East Side Story\",6.8],[\"The Last Turning\",6.8],[\"Odd Number\",7.0],[\"Beyond the Nights\",7.7],[\"Le braghe del padrone\",5.7],[\"Scab\",4.0],[\"The Vanishing Shadow\",6.4],[\"Empress Chung\",7.0],[\"The Devil in the Heart\",6.0],[\"Hondo\",7.0],[\"Laman\",5.9],[\"La segua\",6.2],[\"La selva de fuego\",6.8],[\"The Wandering Swordsman\",6.5],[\"The Gorbals Story\",4.9],[\"Souhvezdí panny\",5.4],[\"Submarine\",6.3],[\"Netherworld\",4.3],[\"Mother India\",4.0],[\"Comoara din Vadul Vechi\",6.1],[\"Stop It, You're Killing Me\",3.6],[\"God's Gold\",5.9],[\"Ormai è fatta!\",6.6],[\"The Legion of No Return\",5.2],[\"Gangsters\",6.4],[\"Commandos and Hot Babes\",4.5],[\"To Love Again\",6.8],[\"Blondie's Anniversary\",6.5],[\"Love Among the Millionaires\",5.9],[\"Felicia\",5.3],[\"The Nightingale's Prayer\",8.1],[\"Jungle Manhunt\",5.4],[\"Carry on Don't Lose Your Head\",6.5],[\"Love-moi\",6.0],[\"Maain Bhi Ladki Hun\",7.6],[\"Knyaz Udacha Andreevich\",6.6],[\"Robot in the Family\",1.7],[\"Riders in the Sky\",6.5],[\"Murder Backstage\",7.0],[\"Les Misérables\",7.3],[\"Vampiri su medju nama\",4.9],[\"Bukas luluhod ang mga tala\",6.2],[\"No hay cruces en el mar\",6.1],[\"Fight, Zatoichi, Fight\",7.4],[\"Charlie Strapp and Froggy Ball Flying High\",6.5],[\"The People's Enemy\",5.6],[\"The Girl Next Door\",6.4],[\"El papelerito\",7.7],[\"Hildegarde\",4.7],[\"Kaçis\",4.3],[\"Cold Feet\",5.3],[\"The Mad Room\",5.7],[\"Rambo: First Blood Part II\",6.5],[\"Delivered\",5.6],[\"De vliegende Hollander\",7.2],[\"We Home Toilers\",6.7],[\"Deprivation\",7.0],[\"Diary of a Young Erotic Writer\",5.0],[\"El extraño visitante\",7.0],[\"Half a Bride\",6.2],[\"Fiebre amarilla\",4.7],[\"Carodejky z predmestí\",4.9],[\"Rambo III\",5.8],[\"Komm in den Garten\",6.9],[\"Felix the Cat: The Movie\",4.7],[\"Riot in a Women's Prison\",4.6],[\"Bad Man's Bluff\",5.7],[\"The Experts\",6.7],[\"The Crucifixion\",6.2],[\"Tiens-toi bien après les oreilles à Papa\",5.9],[\"La lucha con la pantera\",6.1],[\"Time's Up!\",6.4],[\"Trouble in the Sky\",6.5],[\"The Lady of Monza\",5.4],[\"Master Stroke\",6.2],[\"Lethal Pursuit\",5.0],[\"Abschiedsdisco\",6.2],[\"The Fearmaker\",5.1],[\"Code of the Prairie\",7.1],[\"Derailed\",6.6],[\"A Gentleman with Mustache\",6.2],[\"Zärtliche Chaoten\",4.0],[\"Silent Möbius\",6.3],[\"The Life and Times of Charlie Putz\",7.0],[\"Io non vedo tu non parli lui non sente\",5.7],[\"Lucio Flavio\",7.4],[\"Zelyonaya kareta\",6.5],[\"Lost Signal\",3.8],[\"Kahreden firar\",3.9],[\"The Water Babies\",6.1],[\"Death by Association\",7.5],[\"The Slingshot\",6.5],[\"Angelitos del trapecio\",6.7],[\"Granatovyy braslet\",6.6],[\"The Wise Monkey\",6.8],[\"The Blue Lagoon\",6.3],[\"Moro No Brasil\",6.6],[\"Il trasformista\",4.3],[\"An American Tail: Fievel Goes West\",6.5],[\"Rock School\",6.5],[\"Die weiße Spinne\",6.2],[\"Cosmos\",6.4],[\"Diamonds of the Andes\",6.1],[\"Manufacturing Consent: Noam Chomsky and the Media\",8.1],[\"In Caliente\",5.9],[\"Anne of the Thousand Days\",7.4],[\"Une vie de chien\",5.0],[\"Xuxa in Abracadabra\",2.8],[\"The Terrorist\",7.0],[\"Amendment to the Law for the Defense of the State\",7.2],[\"Caché\",7.3],[\"The Angelic Conversation\",6.1],[\"With a Song in My Heart\",6.7],[\"To Be Twenty in the Aures\",6.9],[\"Batasari\",5.5],[\"Smoke in the Wind\",6.0],[\"Tintorettor Jishu\",6.8],[\"Dandy\",6.9],[\"The Deep Purple\",4.0],[\"Blackball\",5.6],[\"The Boy Friend\",6.8],[\"Spy Kids 3: Game Over\",4.4],[\"Cowboys & Aliens\",6.0],[\"Have Rocket -- Will Travel\",5.6],[\"A Tale of Two Cities\",6.1],[\"13 Hours by Air\",6.1],[\"Night Train to Paris\",5.1],[\"Trilby\",4.6],[\"Star Trek II: The Wrath of Khan\",7.7],[\"Racconti di donne\",6.0],[\"The 201 Canaries\",6.4],[\"Girls for Rent\",4.4],[\"You I Love\",6.2],[\"Street Crimes\",4.9],[\"Dudes\",7.9],[\"The Pink Panther Strikes Again\",7.1],[\"Home Alone 3\",4.6],[\"Nijinsky\",6.6],[\"Headline\",6.6],[\"The Happening\",5.1],[\"Jirochô sangokushi: tabi garasu jirochô ikka\",8.3],[\"Dark Story of a Japanese Rapist\",5.7],[\"Three Thieves\",7.0],[\"Not on the Lips\",6.4],[\"Operation Gold Ingot\",5.1],[\"Dinotopia: Quest for the Ruby Sunstone\",5.1],[\"Andromedia\",4.7],[\"Le soleil en face\",5.6],[\"Down by Law\",7.6],[\"La ragazza dalla pelle di luna\",5.0],[\"Vainilla, bronce y morir (Una mujer más)\",7.3],[\"Torpedo Zone\",5.6],[\"Tiempos duros para Drácula\",5.2],[\"El amor de María Isabel\",6.5],[\"My Little Pony: The Movie\",6.0],[\"Kaiser's Finish\",4.5],[\"Napoli piange e ride\",6.7],[\"Weary River\",6.1],[\"Dangerous Game\",5.1],[\"Splittring\",7.1],[\"O Diabo Desceu à Vila\",6.1],[\"The Farmer Takes a Wife\",5.2],[\"Suhaag\",6.5],[\"Chico, chica, ¡boom!\",3.9],[\"The Last Hunter\",5.9],[\"A Time to Live and a Time to Love\",4.8],[\"Rich, Young and Pretty\",5.8],[\"Alias Will James\",7.5],[\"Pervirella\",4.2],[\"The Family\",7.6],[\"Flesh on Fire\",5.4],[\"Madhouse\",5.4],[\"Breakfast in Bed\",4.6],[\"Everything's Gone Green\",6.0],[\"Bad Inclination\",3.7],[\"The Most Beautiful Animal in the World\",6.9],[\"One Magic Christmas\",6.4],[\"La marcha de Zacatecas\",7.5],[\"Under the Pampas Moon\",5.8],[\"Future Hunters\",4.3],[\"Whistle Stop\",5.5],[\"Forever After\",6.2],[\"East of Borneo\",5.5],[\"Avodah B'Eynaim\",5.1],[\"Memorias de un peliculero\",7.9],[\"Paradisul în direct\",6.0],[\"House on the Waterfront\",6.2],[\"Bowery Buckaroos\",6.0],[\"Maniac Cop\",6.0],[\"The Story of Sin\",6.1],[\"The Sword and the Sorcerer\",5.5],[\"Kenji Mizoguchi: The Life of a Film Director\",7.2],[\"The Wet Parade\",6.2],[\"Un centesimo di secondo\",4.9],[\"Care Bears Movie II: A New Generation\",5.6],[\"The Hot Heiress\",5.7],[\"Love Is a Racket\",6.2],[\"The Story of Seabiscuit\",6.1],[\"Magonia\",6.7],[\"Raja Desingu\",6.8],[\"The Fighting Kentuckian\",6.4],[\"The Leatherneck\",5.7],[\"The Swiss Conspiracy\",5.0],[\"Kyokaku Retsuden\",7.8],[\"Ballermann 6\",5.1],[\"Kaadhal Konden\",8.0],[\"Under the Blossoming Cherry Trees\",7.3],[\"Sukeban deka: Kazama sanshimai no gyakushû\",5.5],[\"Demon Pond\",7.0],[\"The Sacred Call\",6.3],[\"Strip Tease Murder\",5.3],[\"Judgment at Nuremberg\",8.3],[\"Bitter End\",7.2],[\"Vendetta\",4.8],[\"The Miracle of P. Tinto\",7.1],[\"Freedomland\",5.2],[\"Border Flight\",6.6],[\"It Happened in Brooklyn\",6.5],[\"Passing of the Oklahoma Outlaws\",6.4],[\"Bubbles Galore\",3.2],[\"Elisabeth Kübler-Ross: Facing Death\",6.7],[\"Avalanche\",3.7],[\"The Versace Murder\",3.4],[\"Hands Up!\",6.5],[\"Fantasies\",4.3],[\"Hei chi hei\",5.8],[\"Letty Lynton\",6.7],[\"Cyborg 009: Monster Wars\",5.9],[\"Evidence\",6.8],[\"Le rose et le blanc\",3.7],[\"Broadway Gondolier\",6.4],[\"The Men Who Fell\",3.6],[\"The Texas Tornado\",6.1],[\"Dreissig Jahre\",6.3],[\"Tillie and Gus\",6.9],[\"Severe Clear\",6.5],[\"Quiet Days in Clichy\",4.8],[\"The Marshal's Daughter\",5.7],[\"Rocky Balboa\",7.1],[\"Las tentadoras\",6.5],[\"Wonderful Things\",5.6],[\"The Shoe-Shine Boy\",5.7],[\"The Troubles of Kish Kish Bey\",8.2],[\"Joshilaay\",5.6],[\"The Bermondsey Kid\",7.3],[\"Prometheus\",6.6],[\"Dynamite\",6.8],[\"Gypsy\",7.1],[\"One Down\",4.8],[\"The Man Who Seeks the Truth\",5.2],[\"Non-Player Character\",8.2],[\"The Adventures of Priscilla, Queen of the Desert\",7.5],[\"Ya ego nevesta\",6.5],[\"Aus erster Ehe\",2.8],[\"Before the Devil Knows You're Dead\",7.3],[\"The Blue Kite\",7.5],[\"Gamers\",5.3],[\"Trois\",3.9],[\"The Immigrant Garden\",7.3],[\"The Wild Team\",4.8],[\"Cutter's Way\",6.8],[\"Satan's Cheerleaders\",4.1],[\"Zhestkoe vremya\",5.2],[\"Yojimbo\",8.2],[\"Yarost\",7.6],[\"Provincia violenta\",4.5],[\"March Comes in Like a Lion\",6.7],[\"Los gavilanes\",7.2],[\"The Last Revenge\",7.1],[\"Chances Are\",6.5],[\"The Knife to the Throat\",5.3],[\"The Silent Love\",6.2],[\"The Primitives\",5.3],[\"Naked Vengeance\",5.7],[\"Der Bauer als Millionär\",8.1],[\"Yamashita: The Tiger's Treasure\",5.6],[\"Rakkauden kaikkivalta - Amor Omnia\",6.1],[\"História de um Crápula\",5.6],[\"Dany la ravageuse\",4.9],[\"Gunfighters of Casa Grande\",4.6],[\"Highway 301\",6.8],[\"Song of the Buckaroo\",6.6],[\"The Trail\",5.4],[\"Taqdeer\",6.6],[\"Caballo prieto afamado\",8.9],[\"Kiki and Tiger\",6.7],[\"Stolen Wednesday\",5.2],[\"This Is America\",5.9],[\"Judgement\",6.3],[\"Loophole\",6.7],[\"Tal para cual\",7.5],[\"Freakshow\",3.7],[\"Otto no teisô - Haru kitareba\",7.6],[\"El presidio\",6.2],[\"The Day Maradona Met Gardel\",5.6],[\"Snayper\",5.6],[\"Chukkallo Chandrudu\",5.4],[\"A Half Pint of Beer\",6.6],[\"Tavaratalo Lapatossu & Vinski\",4.5],[\"Filial\",4.9],[\"Telefoni i një mëngjesi\",7.2],[\"Aquella casa en las afueras\",5.5],[\"Radio Romance\",7.4],[\"Kill Your Darlings\",4.4],[\"To the Left of the Father\",7.5],[\"Love\",5.0],[\"The Adventures of Flash Beaver\",5.5],[\"Tattoo\",8.4],[\"Vasiliy i Vasilisa\",6.6],[\"Appointment in Honduras\",5.6],[\"The Bible As History\",4.8],[\"Spider Force\",6.3],[\"Going for Broke\",6.4],[\"The Wolf Dog\",5.7],[\"Dressed to Kill\",6.5],[\"Pinky and the Million Dollar Pug\",6.2],[\"Manifesto\",6.1],[\"Love Is Forbidden\",7.0],[\"Song of the Road\",6.5],[\"Pentru ca se iubesc\",7.3],[\"Protiv techeniya\",4.8],[\"The Return of Dracula\",5.7],[\"Love in the Time of Money\",5.3],[\"Cage\\u002fCunningham\",7.6],[\"Rookies Run Amok 2\",3.6],[\"The Mating Call\",6.7],[\"The Gamble\",4.9],[\"Ankhen\",7.2],[\"A Little Witch\",7.1],[\"The Penny Promise\",6.2],[\"Kill Rommel!\",4.5],[\"Marriage Episodes\",5.7],[\"Terrified\",3.5],[\"Tisoy!\",6.2],[\"Bon Voyage, Charlie Brown (and Don't Come Back!!)\",7.1],[\"976-EVIL\",5.1],[\"My Father the Hero\",6.1],[\"Luther\",6.4],[\"The Rare Breed\",6.3],[\"Dvacátý devátý\",1.9],[\"Fearless\",5.6],[\"Hot Ice\",3.8],[\"The Hippie Revolution\",7.2],[\"The Kentucky Fried Movie\",6.4],[\"Bikini Summer II\",3.4],[\"The Devil's Pipeline\",6.1],[\"Drugs Fighters\",5.3],[\"Shadow of the Boomerang\",7.3],[\"The Story of Ermei\",7.6],[\"The Adventures of Huck Finn\",6.2],[\"Brotherhood\",6.3],[\"Warriors of Heaven and Earth\",6.3],[\"Son of Roaring Dan\",6.1],[\"Squadra antigangsters\",5.5],[\"Ethereal\",4.7],[\"The Fascination\",6.1],[\"The Great Dan Patch\",5.9],[\"Niccole... The Story of 'O'\",6.1],[\"Judaai\",6.1],[\"Truck\",8.5],[\"Lover\",5.4],[\"The Turkish Gambit\",6.9],[\"All Jokes Aside\",4.3],[\"Super\",5.8],[\"Shaolin Tough Kid\",5.2],[\"Wild Tango\",6.7],[\"The Beat Generation\",5.5],[\"Orphans and Angels\",5.0],[\"'G' Men\",7.1],[\"Sins Without Intentions\",4.5],[\"Astronomy of Errors\",6.8],[\"Prince Valiant\",5.1],[\"Forest of Beastly Desire\",3.6],[\"Sky Palace\",6.9],[\"The Girls' Alfred\",5.0],[\"Mela\",6.8],[\"Feu sacré\",5.9],[\"Dishay, choveche\",6.8],[\"All the Loving Couples\",5.3],[\"Journey to Midnight\",5.1],[\"El águila negra contra los enmascarados de la muerte\",5.6],[\"Gli ordini sono ordini\",6.1],[\"The Nada Gang\",6.6],[\"Birds of Prey\",6.3],[\"Silent Cry\",4.9],[\"Achan Rajavu Appan Jethavu\",5.2],[\"Son of Zorro\",6.2],[\"Days of Inspector Ambrosio\",6.1],[\"The Pumaman\",2.3],[\"Return of the Living Dead II\",5.7],[\"An Unexpected Walk\",5.4],[\"Ten Brothers\",6.0],[\"You Lucky People!\",5.1],[\"Hiljadu stubova dalekovoda\",7.0],[\"La fiancée qui venait du froid\",4.8],[\"Desam\",6.0],[\"White Palace\",6.5],[\"School of Thieves\",5.8],[\"The Wisher\",4.4],[\"Vice and Virtue\",6.0],[\"Loss of Feeling\",6.4],[\"Viel Lärm um Nixi\",8.2],[\"Tap\",6.6],[\"Riverbend\",5.9],[\"Candidate for Seduction\",4.4],[\"Video Vixens!\",4.4],[\"Killer Housewives\",5.1],[\"Black and White in Color\",6.7],[\"Downtown Torpedoes\",5.9],[\"Angels Over Broadway\",6.5],[\"Here and Elsewhere\",7.0],[\"Runaway Bride\",5.6],[\"Bugbog sarado\",6.2],[\"Love Thy Neighbor\",6.8],[\"Before Morning\",5.1],[\"Tak fordi du kom, Nick\",6.7],[\"Protest\",8.3],[\"Midsummer Madness\",5.9],[\"The Man from London\",7.0],[\"Cyclops\",7.5],[\"Spy for Germany\",6.2],[\"Tumsa Nahin Dekha\",6.8],[\"Moutarde van Sonaansee\",5.8],[\"Mudhalvan\",8.4],[\"Like That Night\",5.2],[\"Last Supper\",7.1],[\"Burning Paradise\",7.0],[\"The Devil and Leroy Bassett\",3.9],[\"Shi xiong chu ma\",6.3],[\"Till the End of Time\",6.5],[\"The Princess and the Goblin\",6.7],[\"Showtime\",5.6],[\"Happiness Is a Warm Gun\",5.8],[\"Mayuri\",6.9],[\"Jazzclub - Der frühe Vogel fängt den Wurm.\",6.7],[\"Timeless Melody\",7.3],[\"Coyote Trails\",5.4],[\"Phantoms\",5.4],[\"Yaadein...\",4.2],[\"The Golden Ball\",6.3],[\"Rascal\",6.3],[\"The Good and the Bad\",6.7],[\"Little Nellie Kelly\",6.3],[\"Smålänningar\",4.9],[\"El favor\",5.5],[\"Raffles Hotel\",5.7],[\"Kara Murat: Seyh Gaffar'a Karsi\",5.3],[\"The Outsider\",4.8],[\"Promisiuni\",7.5],[\"Disclosure\",6.2],[\"Naanal\",6.0],[\"Mrtvej brouk\",6.3],[\"El rey de los albures\",5.9],[\"Incident at Raven's Gate\",5.4],[\"First Knight\",6.0],[\"Raadha Aur Seeta\",6.3],[\"Song and Dance Man\",5.7],[\"Her Gönülde Bir Aslan Yatar\",6.5],[\"Summer of the Lion Kings\",4.7],[\"Joshilaay\",5.6],[\"Cavalier in Devil's Castle\",5.0],[\"I Do Not Move\",6.7],[\"The Hills Run Red\",5.8],[\"Filip z konopi\",6.2],[\"S'Waisechind vo Engelberg\",6.0],[\"Alibaba Marjinaa\",7.3],[\"Amazing World\",5.0],[\"The White Sister\",6.9],[\"Raw Force\",5.4],[\"Sucedió en México\",6.3],[\"Enfim Sós... Com o Outro\",6.6],[\"That Kiljunen Family\",3.9],[\"Home Sweet Home\",5.7],[\"Terror and Black Lace\",6.2],[\"Surprise Hour\",6.7],[\"Princess Raccoon\",6.5],[\"Dahil may isang ikaw\",7.7],[\"Love Trap\",4.5],[\"Trocadero Lemon Blue\",6.0],[\"The Singing Thief\",6.0],[\"Talk\",5.3],[\"Sen de mi Leyla\",5.7],[\"A Glimpse of Yesterday\",5.1],[\"Gatica, the Monkey\",7.2],[\"Torpedo Bay\",6.0],[\"Big\",7.3],[\"Otto Is a Rhino\",6.1],[\"Love and Human Remains\",6.6],[\"October (Ten Days that Shook the World)\",7.4],[\"The Ghost Club\",3.5],[\"Parenthood\",7.1],[\"Offside\",6.7],[\"The Little Rebels\",6.3],[\"If Looks Could Kill\",5.8],[\"Najagalude Kochu Doctor\",6.7],[\"The Blue Angel\",7.6],[\"The Haunted House\",4.2],[\"Aurore\",5.5],[\"Kapelusz pana Anatola\",6.5],[\"La niña de mis ojos\",6.7],[\"Evening Sun\",5.9],[\"Sanjeon sujeon\",3.5],[\"Heartlift\",5.9],[\"Pioneers of Palestine\",2.9],[\"Heat and Dust\",6.5],[\"A Distant Thunder\",5.1],[\"The Roaring Twenties\",7.9],[\"Gallego\",7.0],[\"The Chiefs\",6.4],[\"Adultery: A User's Guide\",5.7],[\"The Colossus of Rhodes\",5.8],[\"Aitraaz\",6.6],[\"Heintje - Mein bester Freund\",4.4],[\"Manón\",7.0],[\"Justice\",5.1],[\"Me First\",6.6],[\"Frankenstein Unbound\",5.4],[\"The Arrangement\",6.5],[\"Casinha Pequenina\",6.9],[\"This Man's Navy\",6.2],[\"Midhunam\",7.9],[\"Praxis Dr. Hasenbein\",6.8],[\"Swing Time\",7.4],[\"The Other Side of Bonnie and Clyde\",5.4],[\"Tragic Departure\",5.6],[\"Blood Heat\",5.1],[\"Street Singer\",6.1],[\"Small Time Obsession\",7.1],[\"Time Lost and Time Remembered\",6.9],[\"Nude Fear\",5.2],[\"What Rats Won't Do\",6.1],[\"Feral\",3.6],[\"Banglavil Outha\",4.3],[\"Escape from Hong Kong\",5.6],[\"Naked Fury\",5.4],[\"The Town Hero\",6.9],[\"The Gene Generation\",4.2],[\"Heart and Soul\",6.1],[\"The Cell\",6.4],[\"Ratavartijan kaunis Inkeri\",6.4],[\"Spider Baby or, The Maddest Story Ever Told\",6.7],[\"The Romanovs: An Imperial Family\",7.2],[\"Daulat\",6.3],[\"Jerry and Tom\",6.5],[\"Spanish Fly\",4.6],[\"Barumbado\",8.8],[\"Time Tracers\",3.7],[\"Le village perdu\",6.5],[\"My Darling Clementine\",7.7],[\"Patanga\",5.7],[\"Pistoleros asesinos\",6.0],[\"I Loved an Armchair\",5.4],[\"High Speed\",5.1],[\"After School\",3.6],[\"Seducing Doctor Lewis\",7.3],[\"Aasmaan Se Gira\",6.8],[\"Bersaglio altezza uomo\",5.1],[\"First Love\",6.2],[\"The Frog\",6.6],[\"Xi xiang ji\",6.1],[\"The Deep Below\",4.1],[\"Border Bandits\",6.8],[\"The Trial of Vivienne Ware\",6.8],[\"Skeleton Coast\",4.4],[\"Love and Happiness\",5.4],[\"Caín\",6.3],[\"The Feather\",7.8],[\"Submarine X-1\",5.3],[\"Fantasticheskaya istoriya\",6.1],[\"Svenska Floyd\",4.2],[\"The Country Girl\",7.2],[\"Keiko en peligro\",6.3],[\"Süper Adam Istanbul'da\",5.4],[\"The Night Affair\",6.5],[\"Happenstance\",6.7],[\"Winter Break\",5.0],[\"Shakespeare's Merchant\",4.4],[\"Tomboy and the Champ\",6.4],[\"Her Kursuna Bir Ölü\",4.8],[\"La brute\",4.4],[\"Force Four\",4.5],[\"Isto É Pelé\",6.8],[\"The Ghost Informer\",4.2],[\"Driller\",4.2],[\"The Cisco Kid and the Lady\",6.0],[\"From the Same Family\",7.1],[\"Commack Road\",7.4],[\"Sweet Underground\",7.8],[\"Le secret du cargo\",2.3],[\"High Road\",8.0],[\"The Unfaithful Wife\",7.4]],\"hovertemplate\":\"Runtime (minutes)=%{x}\\u003cbr\\u003eNumber of Votes=%{y}\\u003cbr\\u003etitle=%{customdata[0]}\\u003cbr\\u003eaverageRating=%{customdata[1]}\\u003cbr\\u003eRelease Year=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":[2000,1959,1940,1986,1938,1928,1991,1994,1984,1969,1958,1964,1990,2008,1988,2002,1974,1956,1993,1957,1984,1995,1968,1936,1967,1977,1957,1964,1972,1980,2000,1973,1950,2003,1974,1997,2004,1982,2001,1986,1982,2000,1933,1996,1938,1972,1993,1955,2007,2003,1943,1966,2003,2009,1933,1979,1977,2006,1939,1973,1999,1962,1928,1998,1989,1981,1959,2000,1952,1947,1994,1955,1996,1977,1967,1976,1985,1997,2002,2003,2006,1942,1946,1947,1949,1990,1999,1970,1975,1988,1966,1935,1956,1986,1982,1999,1937,1975,1953,1969,1952,1935,1981,1939,1932,2005,1933,1974,1965,1966,1980,1962,1962,1936,2003,2005,1965,1981,1958,1995,1945,2007,1977,1989,1983,1958,2001,1978,1962,1918,1986,1932,2005,1979,2018,2004,2005,2002,1991,1995,2005,1995,1981,2002,1964,1977,1999,1958,2006,1977,1981,1945,1946,1967,1976,1931,1983,1954,1953,1930,1942,2003,1969,1997,1982,2005,1993,1983,1986,1952,2002,1985,1980,1980,1994,1915,1935,1969,2003,1991,1982,1989,1998,1977,1944,1952,1973,1987,1935,1991,1987,2004,2003,1965,1971,1969,1988,1937,1996,1926,1971,1977,1982,2005,1977,1989,2002,1987,2004,1941,1963,1993,1990,1976,1977,1998,1925,1988,1986,1999,1995,1952,1987,2001,1983,2002,1930,1919,1965,1947,1985,1994,2001,1938,1967,1946,1984,1972,1961,1992,2003,2005,1977,1977,1931,1979,1961,1937,1927,1987,1999,1994,1949,1988,1969,1992,1994,1987,2003,1937,1968,1993,1992,1974,1977,1987,1935,1989,1990,1990,1949,1962,1998,1975,1948,1998,1960,1971,1992,1980,1984,1987,1968,2004,1987,1949,1939,1998,2001,1994,1973,1944,1953,1999,1931,1979,1989,1931,2000,1979,1970,1990,1993,1991,1945,1975,1953,2000,1994,1985,1999,1965,2008,1953,1953,2001,1934,1953,1965,1940,1936,2004,1969,1954,1933,1988,1980,2005,1931,1984,1966,1999,1995,1973,1964,1970,2005,2000,1994,1940,1962,1993,1933,1992,1955,1983,2003,1973,1940,1941,1974,1978,1970,1948,2001,2000,1992,1963,1996,1979,1960,2005,1989,1982,1976,1966,1962,1962,2001,1960,1987,2005,1973,1988,1933,1936,1976,1969,1971,1956,1981,1949,1927,2002,1973,1956,2000,1995,2006,1956,1951,2004,1992,1993,1981,2008,1972,1975,1997,1996,1963,2002,1942,1959,1936,1976,1963,1961,1956,1966,1931,1989,1979,1968,1944,1950,1934,2003,1962,1947,2002,1914,2001,2002,1980,2005,1989,1932,1939,1999,1941,1968,1997,1927,1960,1975,1934,1939,2000,1990,1995,1939,1990,1977,1957,1979,1987,1942,1974,1943,1977,1988,1978,2006,1943,1956,1976,1999,1942,1939,1986,1985,1948,1974,1932,1945,1936,2004,1964,1974,1963,1957,1998,2004,1960,1986,1979,1964,1975,1998,1992,1977,1945,1990,1957,1986,1951,1964,1914,1995,1997,1986,1998,2003,1980,2002,1981,1953,1966,1991,1980,1956,1987,1998,1986,1999,1931,1997,2001,1964,1938,1968,1977,1987,1974,1995,1942,1974,1992,1991,1993,2005,1981,1988,1953,1981,2002,1979,1979,2003,1947,1957,1988,1996,1982,1988,1967,1982,1913,1998,1932,2005,1961,2000,1997,1936,2002,1958,1977,1971,1968,1969,1959,1990,1937,2003,1941,2003,1990,1987,1994,1971,1974,1994,1988,1965,1966,2001,2004,2004,1978,2000,1992,1983,1967,1964,1983,1974,1943,1962,1976,1993,1979,1990,1920,1961,1981,1984,1984,1975,1992,1992,2006,1995,2003,1950,2009,2000,1945,1939,1965,2003,2005,1980,1970,1935,1967,2001,1936,2010,2004,1967,1939,1969,1947,1986,2003,1983,1986,1974,1980,1965,2008,1926,1931,2005,1999,2002,1977,1911,1994,2000,2000,1931,2004,1993,1920,1989,2003,2001,1973,1994,1943,1988,1993,2001,1971,1998,1978,1930,1954,1944,1944,1964,1938,2003,2006,1969,2002,1956,1971,2005,1961,2000,1958,2004,1979,1972,1921,1940,2005,1971,1982,1976,2002,1981,1979,1950,1943,1981,1946,1988,1945,1959,1981,1933,1972,2004,2005,1998,1961,1952,1924,1953,1938,1977,1914,1975,2004,1997,1996,1974,1945,1994,1996,1995,2001,1991,2004,1937,1967,1992,1991,1958,1974,1995,2002,1985,1969,1926,1964,1957,1978,1978,1973,1970,1965,1986,1984,2002,2001,1986,1978,1979,2004,1982,1979,1950,1973,1991,1994,1969,1984,1987,1958,1967,1981,1949,1980,2006,1952,1946,2002,1983,2001,1958,1933,1958,2005,1986,1989,1990,1965,1980,1965,1999,1993,1974,1953,1986,1966,1987,1971,1963,1982,2005,1944,1929,1986,1980,1939,1980,1987,2002,1934,1999,1992,1979,1996,1998,1973,1985,1986,2004,1944,2004,1953,1987,1980,1974,1959,1999,1976,1996,2005,1980,1917,1970,1919,1928,1933,1976,1923,1969,1999,2004,1959,2007,1963,1995,1940,2005,1941,2011,1980,1930,1975,1970,1918,1939,1965,1971,1997,1978,1987,1971,1942,1944,1977,1946,2003,1985,1956,1996,1956,1973,1974,1987,1990,1974,2003,2006,1930,1982,1985,1954,2004,1975,2001,1997,1968,1981,2006,2000,2002,1982,2004,1990,1984,2002,2004,1953,1939,1972,1948,1975,1970,1987,2007,1959,2000,1967,1996,1979,1982,1954,1951,1998,1969,1958,2000,1987,1978,1997,2002,1953,1992,1945,1985,1998,1924,1964,1954,1985,1940,2004,1914,1969,1987,1965,1978,2001,1929,1973,1927,2002,1992,1991,1985,1928,1957,1977,1966,2001,2006,2003,1969,1974,2002,1929,1967,2006,1955,1983,2002,1950,1981,2002,2002,2000,1933,1975,1988,1936,1996,2003,1982,1943,1978,1989,1973,2002,1970,1982,1950,1999,1962,1992,1952,1931,1944,1971,1992,1986,1936,1965,1967,1995,1983,1953,1928,2001,2001,1935,1967,1978,1952,1988,1978,2001,1994,1984,1957,1918,2006,1968,1941,1966,1917,1987,1938,1966,1956,1991,2000,1936,1977,1958,1931,2005,1947,1977,1953,1997,1996,1998,1958,2003,1976,1988,2005,1995,1956,1951,1980,1999,1968,1986,1983,1989,1956,2002,2006,1980,1984,1956,1946,1943,1940,1980,1942,1981,2000,1949,2000,2002,1909,1988,2002,1971,1967,2003,1986,1924,1943,1967,1955,1984,1985,1993,1935,2005,1962,2005,2003,1958,1950,1982,1969,1980,1971,1987,1969,1946,2007,1995,1966,1967,1991,1966,1959,2006,1975,1964,1949,2005,1954,1975,1958,1977,1958,1976,1967,1961,1969,1962,1931,1996,1989,2003,2002,2006,1952,2001,1964,2003,1999,1964,1988,1959,1995,1996,1992,1955,1931,1960,1960,1994,1977,1964,1955,1974,2001,1961,2004,1988,1963,1967,1968,1939,1999,1978,1955,1985,1936,1974,2005,1979,1978,1997,1989,1970,1946,1941,1948,1999,1998,1946,1972,1997,2003,1969,1990,1946,1990,1970,1975,1990,2002,1963,1946,1972,1971,1994,2004,1998,1979,1959,1955,1983,1980,1937,2003,1978,2000,2005,1983,2003,1969,1990,2005,1934,1998,1982,1974,1942,1961,1999,1982,1964,1930,1933,1984,2006,1996,1996,1946,1971,1979,1968,1994,2003,1947,1987,1957,2008,1955,1995,1994,1941,1965,1940,1967,1978,1996,1972,2005,1941,1948,1990,1982,1934,1941,1998,1959,1937,1996,1966,1997,2006,1959,2000,1977,1950,1990,1996,1998,1970,1986,1983,1952,1971,1966,1998,1965,2002,1957,1960,1931,2001,1991,1947,1987,2005,1971,1969,1993,1979,1991,1966,1955,1952,1974,1985,1997,1956,1958,1979,1942,1925,1975,1972,1983,2001,1933,1998,1955,1986,2003,2005,1997,2000,1975,1980,2003,1987,1919,1971,1999,1978,1976,1988,1972,1998,1939,1969,1989,1997,2002,1948,1974,1939,1940,1928,1926,1943,1991,1943,1957,1972,1979,1937,1938,1987,1932,1938,2003,1951,1997,1935,1957,1979,1943,1964,1948,1942,1956,2001,2004,1999,1969,1998,2001,1985,1933,1974,1947,1999,2002,1958,1976,1934,1951,1943,1992,1961,1929,1980,1979,2003,1987,1985,1942,1981,1973,1946,1940,1977,1987,1959,1970,1965,1956,1936,1990,1971,1944,1993,1996,1953,1994,1984,1984,1970,1969,1958,1925,1961,1935,1965,1990,1999,2006,1992,1964,1981,2003,2003,2007,1959,1976,1987,1982,2000,1987,1994,2003,2003,1973,1974,1968,1950,1945,1982,1975,1999,1937,1994,1965,1936,1995,1947,1945,1963,1985,2005,2006,1964,1995,1990,1939,1962,1960,1978,2005,1934,2005,1976,1953,2002,1985,1945,1970,1950,1968,1928,1992,1992,1964,2000,1921,1999,1969,2002,1982,1971,1947,1930,1969,1959,1951,1967,1991,1964,1989,1993,1949,1960,1982,1989,1984,1968,1964,1991,1935,1953,1951,2001,1985,1999,1969,1985,1998,1995,1942,1953,1977,1997,1928,1982,1991,1988,1991,1988,1974,1926,1973,1994,1971,1975,2001,1960,1969,1967,1988,1990,1971,1944,2005,1942,1987,1991,1994,1971,1977,1967,2006,1966,1978,2003,1993,1959,1965,1978,1949,2002,2002,1991,2005,1963,1996,1968,1992,1935,1969,1943,2003,1998,1976,2005,1985,1952,1972,1961,1975,2008,1988,1920,2003,1971,2003,2011,1959,1917,1936,1964,1923,1982,1988,1964,1974,2004,1992,2001,1976,1997,1980,1943,1967,1953,1967,1926,2003,1962,2005,1998,1980,1986,1972,1957,1954,1976,1970,1986,1918,1954,1929,1988,1984,1979,1953,1979,1969,1980,1977,1951,1988,1997,1974,1971,1990,1977,2006,2003,1974,1985,1969,1935,1988,1946,1926,1931,1988,2004,1995,1955,1947,1988,1975,1982,1975,1932,1981,1986,1931,1932,1949,2001,1960,1949,1929,1976,1968,1997,2003,1975,1988,1979,1954,1961,1961,1993,1996,1998,2006,1936,1947,1915,1996,2003,1978,1998,1926,2003,1972,1932,1967,1929,1982,1935,2007,1928,1989,1933,2009,1990,1953,2006,1980,1958,1962,1934,1989,1933,1998,1929,1962,1996,1940,2004,1994,1969,1940,2007,1993,2006,2000,2001,1985,1981,1977,1998,1961,2002,1978,1991,1956,1982,1989,1955,1971,1962,1985,1961,2001,1922,1965,1972,1964,1950,1938,2006,1967,1977,2003,1933,1977,1970,1954,1953,1989,1937,1930,1996,1992,2006,1955,1940,1988,1987,1980,1996,2006,2001,1974,1972,1991,1981,1953,1977,1994,1977,1933,1928,2001,1988,1942,1937,1972,1981,1958,2002,1991,1983,1928,1988,1968,1984,2001,1969,1954,1995,1977,1980,1988,1991,1974,1966,1974,1978,1977,1996,1977,1992,1940,1995,1960,2004,1993,1986,2003,1940,1979,2002,2003,1949,1975,1997,2003,1992,2005,2000,1984,1979,1993,1959,2003,1935,1975,2000,1997,1971,1994,1935,1948,1942,1981,1969,1968,1958,1972,1974,1968,2002,1995,1947,1988,1980,1988,1997,1995,1955,1962,1983,2002,1990,1986,2002,1963,1935,1942,1989,1989,1982,1974,2001,1976,1997,1940,1976,1999,2003,1940,1933,1941,1967,2007,2007,1982,1956,1957,1959,1999,1931,1992,1994,1973,1973,1966,1991,2002,2001,1984,2004,1999,1935,1998,2001,1994,1969,1976,1940,1935,2004,1989,1977,1994,1985,1994,1965,1998,1982,1988,1995,1979,1936,1976,1991,1989,1959,1943,1966,1983,1956,1977,1999,1960,1982,1958,1968,1981,2005,1986,1941,2005,1999,2004,1978,1969,1994,1982,2002,1993,1963,1988,1983,1993,1928,2003,1989,2005,1955,1991,1989,1930,1928,2006,1957,1947,1966,1999,2005,1933,1983,1978,1939,1988,2004,1995,1961,2004,1970,1986,2003,1964,1990,1981,1963,1945,1993,1997,1936,1968,1955,2002,1938,2000,1966,1998,1998,2006,2005,1942,1959,1958,2007,1948,2000,1950,1967,2000,1982,1998,1998,1990,1997,1947,1946,1971,1986,1971,2002,1988,2003,1992,1979,1982,1937,1927,2007,1946,1932,1988,2005,1987,1929,1968,1988,1961,1954,1990,1972,1958,2000,2003,2003,1961,1972,1987,1975,1974,1984,1984,1939,1995,2003,2004,1929,1996,1969],\"coloraxis\":\"coloraxis\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"showlegend\":false,\"x\":[82.0,84.0,96.0,114.0,95.0,65.0,76.0,90.0,78.0,94.0,150.0,83.0,90.0,90.0,85.0,72.0,91.0,80.0,90.0,81.0,90.0,91.0,110.0,61.0,100.0,171.0,90.0,120.0,104.0,103.0,90.0,98.0,90.0,83.0,80.0,105.0,94.0,70.0,93.0,77.0,87.0,102.0,74.0,136.0,78.0,94.0,71.0,95.0,91.0,90.0,90.0,102.0,100.0,104.0,93.0,101.0,106.0,100.0,95.0,61.0,79.0,91.0,111.0,130.0,117.0,109.0,90.0,101.0,78.0,65.0,137.0,95.0,84.0,98.0,94.0,100.0,137.0,92.0,90.0,103.0,110.0,100.0,70.0,90.0,65.0,228.0,90.0,117.0,103.0,70.0,87.0,90.0,100.0,83.0,115.0,105.0,63.0,85.0,96.0,82.0,88.0,71.0,108.0,97.0,91.0,140.0,69.0,119.0,80.0,119.0,102.0,90.0,95.0,256.0,110.0,95.0,92.0,148.0,87.0,124.0,90.0,123.0,94.0,65.0,93.0,77.0,90.0,109.0,95.0,54.0,97.0,121.0,88.0,91.0,98.0,95.0,91.0,95.0,142.0,111.0,80.0,110.0,96.0,115.0,99.0,165.0,102.0,86.0,119.0,80.0,72.0,70.0,59.0,85.0,79.0,101.0,83.0,79.0,90.0,56.0,67.0,102.0,91.0,124.0,86.0,90.0,103.0,165.0,90.0,106.0,110.0,95.0,71.0,119.0,95.0,50.0,87.0,89.0,113.0,91.0,120.0,97.0,162.0,106.0,80.0,109.0,95.0,84.0,71.0,136.0,163.0,90.0,162.0,88.0,60.0,87.0,96.0,102.0,101.0,70.0,77.0,54.0,70.0,85.0,92.0,93.0,90.0,111.0,99.0,71.0,100.0,136.0,90.0,80.0,103.0,95.0,63.0,89.0,89.0,119.0,145.0,93.0,130.0,121.0,45.0,76.0,70.0,50.0,83.0,110.0,91.0,95.0,100.0,58.0,95.0,58.0,138.0,89.0,82.0,90.0,106.0,104.0,95.0,139.0,79.0,90.0,96.0,308.0,90.0,80.0,109.0,90.0,90.0,108.0,89.0,60.0,50.0,102.0,99.0,78.0,111.0,150.0,84.0,59.0,87.0,92.0,144.0,163.0,95.0,108.0,90.0,108.0,75.0,86.0,100.0,90.0,99.0,93.0,110.0,102.0,92.0,109.0,102.0,109.0,87.0,79.0,73.0,91.0,92.0,116.0,96.0,82.0,73.0,104.0,64.0,145.0,96.0,92.0,60.0,78.0,95.0,149.0,118.0,144.0,73.0,85.0,95.0,87.0,85.0,82.0,50.0,90.0,100.0,87.0,74.0,98.0,68.0,67.0,123.0,76.0,56.0,98.0,90.0,148.0,68.0,136.0,90.0,100.0,75.0,94.0,68.0,107.0,129.0,80.0,92.0,59.0,110.0,96.0,155.0,68.0,85.0,171.0,96.0,95.0,92.0,102.0,180.0,93.0,64.0,67.0,105.0,100.0,95.0,66.0,90.0,95.0,97.0,92.0,110.0,107.0,80.0,60.0,94.0,91.0,80.0,169.0,92.0,77.0,92.0,86.0,105.0,99.0,98.0,85.0,67.0,64.0,86.0,65.0,86.0,99.0,80.0,75.0,70.0,113.0,89.0,87.0,93.0,80.0,117.0,93.0,71.0,135.0,103.0,87.0,101.0,100.0,101.0,75.0,106.0,94.0,90.0,60.0,80.0,97.0,79.0,77.0,78.0,128.0,85.0,140.0,74.0,107.0,95.0,86.0,100.0,80.0,75.0,93.0,115.0,71.0,100.0,50.0,75.0,91.0,101.0,72.0,123.0,84.0,57.0,103.0,63.0,89.0,88.0,76.0,124.0,120.0,63.0,60.0,100.0,92.0,100.0,65.0,72.0,94.0,85.0,70.0,154.0,66.0,162.0,163.0,110.0,100.0,95.0,75.0,87.0,95.0,56.0,181.0,68.0,57.0,114.0,120.0,67.0,105.0,94.0,87.0,85.0,135.0,95.0,108.0,108.0,109.0,138.0,85.0,65.0,81.0,101.0,93.0,88.0,93.0,81.0,86.0,70.0,105.0,71.0,137.0,93.0,55.0,84.0,98.0,56.0,96.0,92.0,98.0,154.0,92.0,103.0,97.0,102.0,92.0,98.0,92.0,95.0,92.0,90.0,97.0,74.0,110.0,89.0,67.0,126.0,88.0,89.0,140.0,100.0,126.0,88.0,88.0,89.0,83.0,90.0,50.0,98.0,93.0,64.0,78.0,110.0,100.0,69.0,92.0,91.0,97.0,101.0,90.0,90.0,105.0,175.0,157.0,120.0,96.0,63.0,112.0,86.0,108.0,57.0,90.0,95.0,90.0,86.0,108.0,98.0,110.0,92.0,85.0,80.0,100.0,70.0,107.0,96.0,88.0,91.0,82.0,89.0,95.0,83.0,94.0,82.0,110.0,96.0,93.0,76.0,92.0,110.0,90.0,101.0,86.0,95.0,91.0,120.0,90.0,92.0,58.0,95.0,87.0,50.0,73.0,102.0,80.0,131.0,100.0,90.0,113.0,135.0,81.0,94.0,77.0,88.0,116.0,83.0,59.0,70.0,56.0,123.0,98.0,93.0,57.0,98.0,90.0,141.0,50.0,103.0,92.0,87.0,96.0,97.0,77.0,66.0,91.0,82.0,97.0,78.0,86.0,85.0,70.0,63.0,84.0,100.0,92.0,120.0,45.0,133.0,93.0,94.0,81.0,52.0,90.0,75.0,90.0,94.0,97.0,51.0,81.0,96.0,92.0,103.0,86.0,94.0,56.0,75.0,64.0,100.0,79.0,52.0,101.0,96.0,137.0,108.0,89.0,98.0,111.0,86.0,93.0,91.0,110.0,124.0,108.0,155.0,90.0,114.0,95.0,84.0,90.0,92.0,94.0,84.0,67.0,90.0,122.0,97.0,73.0,56.0,175.0,65.0,99.0,120.0,94.0,98.0,90.0,94.0,87.0,95.0,81.0,70.0,99.0,98.0,155.0,310.0,95.0,85.0,90.0,98.0,93.0,77.0,89.0,60.0,80.0,108.0,84.0,96.0,141.0,81.0,87.0,109.0,90.0,88.0,82.0,165.0,85.0,82.0,103.0,96.0,112.0,90.0,97.0,92.0,87.0,82.0,101.0,90.0,115.0,109.0,127.0,59.0,92.0,75.0,114.0,105.0,92.0,113.0,77.0,74.0,100.0,80.0,121.0,103.0,100.0,91.0,143.0,85.0,92.0,117.0,91.0,92.0,132.0,91.0,67.0,82.0,105.0,106.0,81.0,96.0,114.0,182.0,104.0,93.0,93.0,96.0,60.0,82.0,95.0,90.0,93.0,90.0,90.0,102.0,89.0,81.0,78.0,90.0,140.0,65.0,141.0,89.0,124.0,76.0,96.0,88.0,94.0,96.0,97.0,79.0,107.0,114.0,96.0,72.0,76.0,104.0,95.0,98.0,88.0,121.0,96.0,73.0,94.0,144.0,135.0,50.0,70.0,120.0,60.0,78.0,72.0,64.0,100.0,96.0,110.0,100.0,87.0,80.0,102.0,108.0,80.0,98.0,80.0,129.0,73.0,87.0,94.0,50.0,90.0,82.0,97.0,96.0,90.0,68.0,94.0,91.0,94.0,52.0,71.0,82.0,65.0,95.0,90.0,99.0,82.0,108.0,192.0,90.0,118.0,98.0,113.0,82.0,90.0,90.0,182.0,89.0,78.0,157.0,120.0,105.0,92.0,94.0,90.0,75.0,105.0,95.0,133.0,91.0,90.0,88.0,71.0,82.0,102.0,73.0,105.0,83.0,75.0,91.0,87.0,93.0,105.0,102.0,93.0,87.0,55.0,129.0,164.0,134.0,91.0,158.0,90.0,90.0,80.0,79.0,62.0,90.0,70.0,101.0,105.0,84.0,94.0,80.0,83.0,59.0,124.0,59.0,98.0,131.0,84.0,90.0,91.0,60.0,82.0,65.0,93.0,130.0,90.0,160.0,78.0,95.0,75.0,87.0,110.0,105.0,86.0,95.0,140.0,118.0,62.0,95.0,85.0,101.0,156.0,113.0,88.0,103.0,81.0,91.0,90.0,62.0,89.0,88.0,63.0,130.0,75.0,87.0,64.0,82.0,335.0,95.0,95.0,76.0,123.0,98.0,92.0,96.0,130.0,79.0,85.0,54.0,125.0,95.0,85.0,67.0,110.0,84.0,90.0,87.0,77.0,57.0,70.0,114.0,69.0,65.0,82.0,80.0,144.0,75.0,80.0,95.0,102.0,117.0,50.0,97.0,93.0,100.0,88.0,65.0,98.0,88.0,77.0,100.0,95.0,98.0,64.0,81.0,119.0,70.0,109.0,85.0,55.0,78.0,110.0,63.0,78.0,87.0,75.0,88.0,119.0,113.0,120.0,95.0,80.0,105.0,142.0,103.0,90.0,90.0,56.0,99.0,95.0,105.0,94.0,78.0,81.0,66.0,55.0,56.0,125.0,76.0,108.0,99.0,60.0,74.0,75.0,50.0,90.0,105.0,90.0,87.0,53.0,58.0,83.0,99.0,85.0,71.0,82.0,89.0,160.0,82.0,120.0,86.0,97.0,96.0,93.0,84.0,88.0,80.0,53.0,88.0,107.0,106.0,60.0,116.0,124.0,92.0,83.0,104.0,173.0,100.0,86.0,145.0,100.0,91.0,88.0,100.0,120.0,94.0,81.0,87.0,121.0,94.0,86.0,63.0,86.0,61.0,79.0,79.0,82.0,87.0,87.0,84.0,90.0,87.0,88.0,60.0,74.0,97.0,94.0,97.0,79.0,93.0,85.0,72.0,79.0,98.0,92.0,88.0,81.0,91.0,98.0,46.0,85.0,95.0,85.0,115.0,64.0,80.0,91.0,90.0,83.0,87.0,102.0,61.0,91.0,103.0,102.0,141.0,101.0,86.0,85.0,76.0,91.0,97.0,153.0,100.0,62.0,120.0,85.0,109.0,92.0,120.0,57.0,90.0,100.0,141.0,77.0,97.0,116.0,167.0,90.0,60.0,95.0,94.0,111.0,86.0,102.0,92.0,79.0,100.0,56.0,105.0,99.0,85.0,100.0,90.0,56.0,90.0,93.0,90.0,62.0,121.0,108.0,142.0,66.0,94.0,91.0,102.0,122.0,81.0,90.0,85.0,104.0,67.0,98.0,80.0,99.0,93.0,87.0,142.0,180.0,58.0,138.0,152.0,88.0,179.0,96.0,90.0,72.0,80.0,105.0,130.0,97.0,112.0,95.0,96.0,67.0,87.0,90.0,105.0,80.0,108.0,93.0,98.0,71.0,98.0,104.0,120.0,115.0,86.0,96.0,80.0,84.0,84.0,93.0,52.0,93.0,81.0,95.0,73.0,129.0,83.0,106.0,93.0,106.0,93.0,95.0,71.0,88.0,89.0,72.0,89.0,101.0,130.0,79.0,83.0,93.0,98.0,72.0,88.0,96.0,68.0,125.0,96.0,88.0,86.0,45.0,75.0,60.0,95.0,90.0,161.0,45.0,55.0,96.0,81.0,93.0,100.0,103.0,95.0,105.0,68.0,84.0,81.0,123.0,60.0,95.0,117.0,85.0,78.0,172.0,93.0,105.0,63.0,84.0,120.0,120.0,88.0,99.0,89.0,80.0,65.0,48.0,82.0,92.0,102.0,65.0,93.0,96.0,97.0,68.0,92.0,123.0,68.0,58.0,97.0,127.0,98.0,75.0,100.0,76.0,96.0,101.0,68.0,85.0,94.0,100.0,93.0,92.0,96.0,92.0,93.0,75.0,58.0,113.0,92.0,90.0,97.0,73.0,123.0,87.0,69.0,72.0,70.0,90.0,60.0,96.0,100.0,110.0,116.0,90.0,74.0,94.0,90.0,96.0,83.0,102.0,94.0,99.0,92.0,91.0,84.0,104.0,97.0,60.0,66.0,93.0,68.0,70.0,97.0,76.0,85.0,87.0,96.0,75.0,77.0,110.0,109.0,77.0,87.0,89.0,100.0,107.0,102.0,82.0,138.0,79.0,70.0,114.0,107.0,96.0,80.0,100.0,124.0,90.0,101.0,156.0,87.0,96.0,95.0,107.0,94.0,105.0,97.0,94.0,100.0,90.0,90.0,90.0,90.0,92.0,104.0,105.0,112.0,87.0,85.0,70.0,125.0,90.0,90.0,85.0,112.0,95.0,101.0,242.0,93.0,101.0,83.0,115.0,102.0,76.0,103.0,74.0,83.0,93.0,85.0,115.0,86.0,90.0,50.0,110.0,94.0,90.0,93.0,93.0,67.0,74.0,63.0,109.0,66.0,90.0,97.0,152.0,79.0,85.0,69.0,83.0,220.0,90.0,132.0,87.0,87.0,83.0,70.0,92.0,98.0,88.0,70.0,93.0,93.0,96.0,93.0,140.0,88.0,113.0,50.0,90.0,67.0,90.0,81.0,102.0,93.0,82.0,91.0,50.0,98.0,92.0,103.0,94.0,94.0,92.0,105.0,111.0,95.0,91.0,93.0,56.0,108.0,92.0,93.0,50.0,97.0,100.0,118.0,101.0,104.0,83.0,94.0,85.0,102.0,85.0,90.0,88.0,101.0,105.0,92.0,75.0,93.0,103.0,99.0,103.0,167.0,84.0,145.0,84.0,87.0,95.0,147.0,117.0,77.0,117.0,100.0,146.0,98.0,100.0,93.0,60.0,96.0,137.0,84.0,119.0,76.0,70.0,80.0,65.0,80.0,113.0,90.0,71.0,92.0,83.0,94.0,90.0,103.0,102.0,129.0,75.0,101.0,104.0,73.0,66.0,115.0,85.0,75.0,109.0,95.0,107.0,79.0,109.0,86.0,73.0,103.0,86.0,80.0,92.0,86.0,98.0,94.0,107.0,81.0,164.0,95.0,95.0,87.0,95.0,83.0,92.0,211.0,97.0,90.0,56.0,95.0,95.0,117.0,89.0,90.0,78.0,96.0,85.0,69.0,77.0,83.0,96.0,90.0,94.0,66.0,85.0,130.0,99.0,132.0,118.0,90.0,76.0,79.0,71.0,98.0,112.0,161.0,100.0,65.0,89.0,106.0,95.0,150.0,95.0,90.0,123.0,116.0,66.0,179.0,83.0,86.0,106.0,113.0,58.0,104.0,60.0,94.0,98.0,91.0,90.0,60.0,115.0,105.0,84.0,60.0,70.0,100.0,99.0,85.0,55.0,90.0,58.0,93.0,120.0,71.0,102.0,115.0,84.0,92.0,80.0,107.0,75.0,130.0,129.0,143.0,90.0,61.0,58.0,104.0,83.0,89.0,117.0,140.0,84.0,93.0,104.0,90.0,109.0,92.0,60.0,110.0,90.0,76.0,118.0,102.0,85.0,108.0,90.0,80.0,70.0,97.0,94.0,113.0,83.0,90.0,90.0,90.0,83.0,58.0,90.0,108.0,85.0,55.0,86.0,97.0,99.0,80.0,106.0,97.0,104.0,89.0,93.0,101.0,146.0,87.0,110.0,98.0,73.0,95.0,123.0,94.0,163.0,85.0,63.0,132.0,97.0,79.0,90.0,90.0,85.0,240.0,70.0,90.0,96.0,120.0,71.0,94.0,74.0,77.0,90.0,100.0,85.0,72.0,104.0,172.0,96.0,91.0,99.0,80.0,95.0,100.0,75.0,92.0,105.0,110.0,97.0,126.0,93.0,94.0,88.0,83.0,85.0,65.0,91.0,95.0,115.0,108.0,92.0,120.0,63.0,90.0,102.0,105.0,94.0,52.0,167.0,55.0,99.0,208.0,76.0,101.0,90.0,124.0,95.0,100.0,85.0,90.0,84.0,91.0,73.0,83.0,96.0,152.0,103.0,72.0,85.0,100.0,85.0,96.0,110.0,105.0,85.0,125.0,100.0,96.0,90.0,89.0,81.0,100.0,79.0,59.0,95.0,112.0,103.0,96.0,87.0,108.0,85.0,105.0,111.0,106.0,68.0,83.0,105.0,90.0,103.0,79.0,53.0,116.0,85.0,82.0,56.0,92.0,84.0,94.0,139.0,138.0,102.0,156.0,94.0,169.0,65.0,60.0,104.0,85.0,93.0,108.0,82.0,95.0,95.0,142.0,84.0,95.0,60.0,96.0,171.0,93.0,85.0,120.0,98.0,106.0,90.0,90.0,88.0,95.0,92.0,128.0,126.0,97.0,95.0,94.0,134.0,109.0,72.0,82.0,107.0,107.0,80.0,75.0,89.0,77.0,90.0,163.0,90.0,90.0,86.0,90.0,90.0,98.0,99.0,97.0,90.0,111.0,117.0,95.0,90.0,87.0,87.0,88.0,102.0,136.0,99.0,104.0,90.0,100.0,95.0,85.0,124.0,100.0,93.0,88.0,132.0,104.0,70.0,95.0,88.0,98.0,73.0,85.0,93.0,84.0,130.0,76.0,106.0,116.0,90.0,95.0,127.0,160.0,93.0,112.0,80.0,90.0,85.0,85.0,95.0,100.0,147.0,94.0,103.0,75.0,113.0,92.0,90.0,119.0,91.0,88.0,88.0,83.0,129.0,60.0,73.0,91.0,96.0,91.0,107.0,85.0,81.0,140.0,150.0,97.0,91.0,90.0,101.0,95.0,97.0,138.0,85.0,92.0,108.0,89.0,108.0,88.0,89.0,90.0,60.0,50.0,86.0,58.0,56.0,98.0,86.0,92.0,88.0,89.0,70.0,92.0,104.0,90.0,54.0,93.0,90.0,92.0,86.0,92.0,73.0,90.0,82.0,110.0,84.0,52.0,74.0,96.0,90.0,98.0,98.0,80.0,98.0],\"xaxis\":\"x\",\"y\":[135.0,90.0,17.0,14.0,279.0,9.0,181.0,9192.0,12.0,66.0,27.0,49.0,9477.0,100200.0,145.0,79.0,2552.0,58.0,361.0,2550.0,26.0,321.0,1915.0,86.0,16.0,8.0,1073.0,11372.0,4134.0,190.0,172.0,1455.0,171.0,57.0,60.0,4941.0,27.0,9.0,178.0,203.0,16.0,27.0,3496.0,76.0,120.0,131.0,6365.0,23.0,1660.0,203.0,26.0,49.0,205.0,66.0,88.0,200.0,29.0,3694.0,215.0,7.0,370.0,8.0,14.0,3156.0,330.0,27.0,22.0,4426.0,946.0,520.0,2467.0,32.0,331.0,14.0,17.0,51.0,53.0,40.0,160.0,867.0,2094.0,23.0,195.0,54.0,65.0,261.0,473.0,540.0,32.0,20.0,2572.0,12.0,83.0,2107.0,459873.0,322.0,137.0,410.0,17277.0,2003.0,4273.0,161.0,1692.0,38.0,208.0,203.0,176.0,61.0,10.0,3408.0,3266.0,29.0,54.0,127.0,1184.0,3013.0,60.0,13.0,1036.0,79.0,15.0,7028.0,83.0,17.0,8.0,123.0,152925.0,438.0,617.0,199.0,20.0,1301.0,293.0,42.0,10208.0,9217.0,391.0,95.0,176.0,14846.0,101.0,123.0,32.0,243.0,77.0,993.0,142.0,99.0,2304.0,36.0,229.0,171.0,37.0,216.0,113.0,34.0,100.0,36968.0,9.0,197.0,208.0,57.0,282.0,130045.0,27.0,72.0,134.0,29.0,53.0,10938.0,4765.0,731.0,65.0,2003.0,22.0,30.0,10.0,16.0,3481.0,120.0,51.0,58.0,1356.0,451.0,98.0,20.0,1775.0,527.0,1690.0,155.0,50.0,11.0,714.0,15.0,6.0,17.0,678.0,144.0,11306.0,28.0,91.0,84.0,27.0,1248.0,35.0,751.0,584.0,35.0,696.0,243.0,55.0,17.0,42.0,30.0,16.0,123.0,51.0,217.0,395.0,64.0,109.0,79.0,166.0,13589.0,26.0,191.0,18.0,34.0,79.0,43.0,20.0,59.0,36.0,54.0,1449.0,424.0,10.0,15.0,16.0,439.0,33323.0,134.0,48.0,178.0,1258.0,18.0,46.0,50.0,9.0,9.0,3222.0,30.0,9.0,201.0,1658.0,5.0,11.0,75757.0,36.0,588.0,26106.0,199.0,120.0,24.0,40.0,431.0,46.0,57.0,1489.0,294.0,110.0,24.0,42.0,519.0,91.0,285.0,412.0,29.0,9.0,997.0,143.0,576.0,21.0,14030.0,5668.0,552.0,708.0,173.0,774.0,413912.0,14.0,430.0,164.0,3413.0,191.0,223.0,23.0,11.0,414.0,89.0,84.0,41.0,401.0,262.0,16.0,167.0,26161.0,568.0,8.0,12.0,23.0,112.0,373.0,13.0,690.0,917.0,72.0,210.0,16118.0,260.0,84.0,8862.0,123.0,52.0,15.0,66.0,9.0,785.0,1259.0,283.0,11.0,1114175.0,1625.0,2711.0,3496.0,113.0,2268.0,63.0,4887.0,740.0,68.0,655.0,73.0,42.0,15.0,893.0,2685.0,637.0,128.0,11.0,16215.0,77.0,236.0,127.0,56.0,19.0,88.0,71.0,21.0,40.0,41.0,785.0,35.0,1799.0,38.0,161.0,49.0,135.0,33.0,1887.0,68.0,466.0,1455.0,139.0,272.0,100.0,4982.0,2816.0,9.0,506.0,264.0,361.0,17.0,2038.0,640.0,13.0,19.0,386.0,153.0,42.0,260.0,2094.0,871.0,15.0,9.0,63.0,138.0,203.0,490.0,23.0,20.0,10.0,65.0,34.0,24.0,285.0,1936.0,191.0,9.0,3449.0,302.0,4902.0,40.0,24.0,37.0,538.0,6.0,1233.0,22.0,2787.0,64.0,205.0,137.0,403.0,674.0,84.0,25003.0,1429.0,71.0,46.0,27.0,10.0,407.0,773.0,18.0,2824.0,294.0,98.0,41.0,3382.0,178.0,128.0,48.0,24927.0,25.0,96.0,571.0,657.0,91.0,17742.0,1469.0,4275.0,2078.0,67.0,1790.0,698.0,14.0,16269.0,127.0,83.0,14.0,16.0,338.0,26.0,8.0,107.0,252.0,2174.0,39.0,32.0,163.0,6379.0,591.0,605.0,29.0,287.0,184.0,130.0,370.0,10.0,7.0,154.0,299.0,339.0,1488.0,968.0,15.0,30.0,742.0,671.0,57.0,38588.0,475.0,27.0,35.0,3188.0,260.0,14.0,40.0,738.0,1327.0,1140.0,331.0,206.0,119.0,411.0,32.0,607.0,130.0,35.0,29654.0,24183.0,1043.0,19.0,29.0,14067.0,848.0,109.0,80.0,181.0,339.0,17.0,298.0,92.0,305.0,71.0,174.0,5146.0,9.0,217.0,261.0,8.0,3047.0,38.0,118.0,492.0,656.0,39.0,503.0,1146.0,4715.0,5886.0,21.0,6339.0,104.0,83.0,3995.0,480.0,156.0,680.0,938.0,14.0,35.0,63.0,697.0,737.0,33332.0,2063.0,153.0,1413.0,15298.0,56.0,75.0,42.0,49.0,339.0,13.0,11.0,296.0,436.0,66.0,628.0,1737.0,83.0,588.0,2758.0,258.0,34.0,3158.0,13.0,1099.0,401.0,1978.0,3208.0,33.0,169.0,41.0,494.0,41.0,64.0,90.0,546.0,1339.0,32.0,17.0,5450.0,158.0,18.0,25.0,127.0,70.0,30.0,420.0,95.0,139.0,94.0,133.0,261.0,2142.0,485.0,231.0,99.0,191.0,35.0,506.0,105.0,13.0,119.0,144.0,148.0,36.0,25.0,12721.0,339.0,29.0,13415.0,1244.0,51.0,796.0,55.0,194265.0,10.0,53.0,42.0,9.0,13.0,816.0,130.0,191.0,21.0,14.0,205.0,29.0,542.0,134.0,727.0,20.0,17.0,136.0,519.0,13.0,24.0,92.0,35.0,140.0,40858.0,209189.0,19.0,16.0,18629.0,170.0,471.0,36.0,60.0,136.0,299.0,150.0,7.0,7141.0,9821.0,93.0,4970.0,10.0,31.0,561.0,58.0,55.0,54.0,11725.0,165.0,213.0,2653.0,752.0,57.0,7.0,541.0,45.0,6049.0,390.0,244.0,31.0,520.0,24.0,271.0,2272.0,23147.0,28.0,8.0,430.0,123.0,367.0,1071.0,50.0,27.0,67.0,100.0,46.0,23.0,31.0,36.0,39.0,900.0,151.0,40.0,14.0,112.0,3057.0,16.0,2120.0,1700.0,2657.0,11.0,88.0,6644.0,164.0,128.0,56.0,41799.0,62.0,29.0,766.0,45.0,8.0,19.0,855.0,73.0,22.0,20.0,1313.0,12.0,38.0,136.0,216.0,161868.0,14438.0,5080.0,331.0,40.0,16.0,1481.0,3261.0,67.0,14.0,15865.0,228.0,1297.0,2990.0,117.0,14544.0,467.0,313.0,538.0,6292.0,11113.0,3592.0,121.0,86.0,10.0,109.0,2326.0,4816.0,2995.0,21.0,16.0,1438.0,2111.0,347.0,117.0,24.0,2710.0,20.0,35.0,1195.0,4925.0,673.0,671.0,54.0,293.0,2591.0,62.0,24.0,11271.0,6962.0,513.0,106.0,26.0,38.0,235.0,264.0,10.0,2553.0,12.0,34.0,75.0,397.0,254.0,18.0,18.0,27.0,14.0,948.0,637.0,25.0,17.0,167.0,934.0,61.0,71379.0,3842.0,44.0,11548.0,13.0,2762.0,26.0,195.0,128.0,17.0,37.0,18.0,11.0,155.0,908.0,94.0,241.0,57.0,934.0,960.0,1367.0,20.0,67.0,11.0,37.0,12.0,151.0,2579.0,1530.0,1002.0,84.0,91.0,136.0,1678.0,14116.0,89.0,46.0,50.0,56.0,1617.0,498.0,108941.0,4591.0,7749.0,75.0,118228.0,297.0,838.0,112.0,29.0,8.0,875.0,338.0,15.0,84.0,8.0,16.0,132.0,179.0,186.0,243.0,8355.0,15.0,317.0,151.0,2798.0,184.0,159.0,175.0,16.0,652.0,6295.0,226.0,1534.0,111.0,38.0,251.0,157.0,40.0,24.0,613.0,131.0,33788.0,67.0,8.0,722.0,30.0,448.0,316.0,565.0,43.0,23.0,15.0,974.0,304.0,26.0,64.0,25.0,30.0,18.0,197.0,62.0,923.0,44.0,36.0,28.0,220.0,239.0,717.0,2277.0,89.0,53.0,32.0,1264.0,1956.0,520.0,34.0,1145.0,490.0,136.0,297205.0,682.0,491.0,14.0,18.0,50532.0,221.0,104228.0,770.0,66.0,1791.0,165.0,2058.0,9.0,13416.0,20.0,28.0,3166.0,516.0,56.0,80.0,58.0,3851.0,86.0,10.0,64.0,34.0,10.0,461.0,34.0,2685.0,684.0,1964.0,18.0,16.0,27.0,229.0,27.0,212.0,119.0,342.0,27.0,23.0,537.0,17653.0,4524.0,30.0,1032.0,46.0,4849.0,138.0,16.0,274.0,201.0,600.0,66.0,442.0,12.0,23.0,33.0,2401.0,97.0,214351.0,20.0,98.0,9936.0,264.0,75.0,184.0,1644.0,48.0,143.0,120.0,414.0,96.0,1889.0,258.0,8885.0,2188.0,15971.0,388.0,326.0,7.0,14276.0,231.0,215.0,896.0,235.0,16.0,1359.0,35.0,37.0,7202.0,197.0,45.0,288.0,133.0,410.0,14.0,67.0,436.0,8.0,225.0,8.0,122.0,43.0,15.0,28.0,98.0,694.0,661.0,291.0,2882.0,235.0,101.0,14.0,103356.0,847.0,379.0,2808.0,64.0,152.0,248.0,27.0,49357.0,476.0,308.0,612.0,32326.0,35.0,33.0,1075.0,5458.0,63.0,1092.0,240.0,103.0,1510.0,1617.0,157.0,25.0,397.0,84.0,1036.0,182096.0,37.0,199.0,11.0,564.0,59.0,1543.0,15.0,201.0,22.0,608.0,744.0,95.0,18.0,181.0,87.0,3801.0,19.0,145.0,41.0,77211.0,787.0,12.0,91.0,242.0,69.0,11.0,184.0,13078.0,10.0,439.0,51.0,7.0,1103.0,74.0,1202.0,30.0,24.0,52.0,15339.0,27.0,153.0,1038.0,22.0,93.0,8972.0,874.0,581.0,585.0,86.0,13.0,8.0,1744.0,214.0,1115.0,42.0,35.0,209.0,21.0,961.0,13.0,64.0,27.0,9.0,23.0,91.0,1313.0,135.0,194.0,576.0,605.0,94.0,257.0,23.0,2820.0,36.0,88.0,37.0,196.0,50.0,53.0,77.0,40747.0,232.0,163.0,60.0,14.0,1693.0,15.0,270.0,242.0,11046.0,856.0,54.0,318.0,82.0,91.0,642.0,4262.0,15.0,760.0,33.0,80465.0,8.0,2025.0,45.0,681.0,34.0,91.0,2419423.0,14.0,27.0,108.0,41.0,4418.0,63.0,410.0,8595.0,20.0,26.0,23.0,51.0,1184.0,995.0,99.0,126.0,131.0,17.0,363.0,49.0,173.0,340.0,494.0,48.0,72.0,2623.0,1964.0,19.0,803.0,538.0,1680.0,76.0,392.0,77.0,173.0,11.0,1488.0,467.0,28.0,32.0,1258.0,11.0,718.0,3592.0,36.0,63.0,9.0,18.0,13.0,2134.0,2310.0,5956.0,3647.0,992.0,42.0,400.0,16.0,546.0,964.0,751.0,604.0,23.0,60.0,21.0,12.0,31364.0,82.0,11.0,62.0,361.0,123.0,206.0,133.0,101.0,62.0,55.0,52.0,127.0,86.0,778.0,312.0,37.0,635.0,120.0,414.0,26.0,201.0,817.0,44.0,30.0,1318.0,445.0,2131.0,291.0,1375.0,47.0,19.0,6032.0,33.0,5285.0,45.0,63.0,25.0,43.0,25.0,25.0,96.0,17.0,415.0,653.0,75.0,109.0,12.0,197.0,25.0,640.0,17.0,12.0,7086.0,65.0,22.0,10.0,35.0,225.0,142.0,40.0,31.0,587.0,8496.0,4227.0,2944.0,168.0,11.0,27.0,165.0,1445.0,51.0,11829.0,105.0,26.0,13.0,37.0,53.0,21.0,116.0,17.0,74.0,25.0,16.0,3167.0,14.0,828.0,16103.0,24.0,109.0,19.0,572.0,816.0,132435.0,31.0,7.0,141.0,8.0,11181.0,68.0,23.0,24.0,873.0,273.0,118.0,40.0,30.0,699.0,28.0,41.0,6428.0,507.0,432.0,29.0,38.0,772.0,1012.0,70.0,27.0,2159.0,661.0,485.0,11.0,18570.0,76.0,106.0,24.0,93.0,29.0,25.0,985.0,94041.0,45.0,29.0,125.0,77.0,38.0,2373.0,62.0,2775.0,119.0,567.0,22.0,14.0,70.0,8.0,212.0,146.0,1149.0,86.0,8880.0,366.0,512.0,40.0,329.0,179.0,404.0,60.0,139.0,164.0,33.0,110.0,13360.0,509.0,40.0,42.0,257.0,113.0,29.0,389.0,1381.0,9.0,30.0,53.0,23.0,303.0,90.0,957.0,29.0,27.0,227.0,118.0,17.0,2107.0,407.0,3325.0,75.0,33.0,71.0,360.0,200.0,292.0,1140.0,504.0,42.0,13.0,2006.0,486.0,76.0,328.0,50.0,205.0,37.0,101.0,735.0,191878.0,256.0,632.0,74.0,28.0,7.0,12.0,51.0,18.0,61.0,146664.0,9.0,1676.0,268.0,18.0,19.0,33.0,28.0,61.0,47.0,478.0,235.0,131.0,90.0,43.0,94.0,55.0,78243.0,62.0,686.0,319.0,13.0,40.0,1010.0,48.0,822.0,12.0,1564.0,23.0,2308.0,44.0,126.0,56.0,696.0,283.0,51.0,29650.0,1057.0,404.0,995.0,12.0,5068.0,429.0,8574.0,31.0,468.0,2083.0,37.0,88757.0,964.0,1564.0,226.0,21.0,57.0,809.0,86.0,18.0,4601.0,3791.0,69784.0,238908.0,1068.0,173.0,207.0,433.0,16.0,133724.0,10.0,99.0,611.0,961.0,270.0,8467.0,33738.0,134059.0,881.0,102.0,887.0,25.0,50.0,206.0,1735.0,25.0,565.0,532.0,30.0,57594.0,134.0,53.0,169.0,41.0,68.0,3027.0,26.0,12.0,616.0,456.0,9.0,18.0,198.0,1304.0,26.0,1126.0,20.0,600.0,22.0,308.0,65.0,11.0,3910.0,14.0,2077.0,246.0,15.0,4793.0,13.0,130.0,573.0,1425.0,17.0,278.0,13.0,9.0,50.0,148.0,373.0,22442.0,948.0,8492.0,345.0,610.0,30.0,2635.0,250.0,612.0,958.0,257.0,14.0,3811.0,174.0,651.0,7.0,3612.0,2662.0,1231.0,137.0,1049.0,20.0,68.0,93552.0,15.0,60.0,4483.0,17663.0,38.0,1169.0,34.0,284.0,75.0,2607.0,317.0,331.0,191.0,28.0,638.0,87.0,35.0,13.0,368.0,247.0,24.0,7.0,559.0,603.0,836.0,102.0,239463.0,38.0,80.0,227.0,6.0,360.0,12.0,96.0,558.0,7372.0,18.0,23.0,8.0,59885.0,15.0,36.0,118634.0,3430.0,2289.0,800.0,50.0,161.0,8347.0,1408.0,55.0,139854.0,47.0,169.0,392.0,148.0,99.0,14593.0,38.0,9.0,69.0,1013.0,37.0,61.0,35.0,6.0,147.0,196.0,1233.0,31.0,299.0,64.0,16.0,69.0,20.0,333.0,62.0,493.0,50.0,315.0,25.0,43.0,59.0,55.0,329.0,136.0,69.0,16.0,15.0,153.0,75.0,959.0,2180.0,11.0,24.0,977.0,49.0,744.0,19.0,14.0,440.0,89.0,78.0,33.0,455.0,34.0,54.0,41.0,15.0,1676.0,762.0,17.0,129.0,403.0,250.0,449.0,163.0,92.0,156.0,38.0,702.0,18.0,3746.0,6532.0,3007.0,533.0,4277.0,15.0,461.0,120.0,24.0,21306.0,544.0,43.0,18.0,19.0,34.0,9670.0,70.0,4513.0,38.0,387.0,130.0,110.0,277.0,42.0,3086.0,8.0,270.0,5006.0,32.0,61.0,73.0,1837.0,468.0,65.0,4601.0,27.0,21.0,2592.0,7.0,124.0,30.0,128.0,8.0,15.0,73.0,301.0,17.0,110.0,1176.0,792.0,182.0,47.0,138.0,144.0,4819.0,22782.0,10.0,382.0,66.0,15.0,173.0,9.0,9489.0,1468.0,1909.0,441.0,211.0,15.0,1937.0,155.0,12.0,361.0,383.0,1907.0,559.0,1435.0,973.0,108560.0,41.0,178.0,113.0,28.0,133.0,620.0,4721.0,389.0,169.0,151.0,28.0,9165.0,8.0,146.0,1052.0,100.0,15.0,29.0,3417.0,66666.0,103.0,136.0,1610.0,27.0,89.0,23925.0,3974.0,487.0,568.0,427.0,787.0,43.0,153.0,75.0,802.0,38.0,90.0,57069.0,29.0,49.0,20.0,621.0,81562.0,19.0,45.0,601.0,14.0,360.0,51.0,69.0,974.0,165.0,11.0,38.0,19.0,18.0,2581.0,8.0,15.0,125.0,446.0,213.0,16.0,833.0,93.0,442.0,147.0,89.0,35.0,94.0,12.0,675.0,107.0,253180.0,552.0,2928.0,8871.0,243.0,57499.0,295.0,323.0,8197.0,16.0,17223.0,25.0,142.0,116.0,8.0,66.0,19.0,225.0,23.0,2295.0,501.0,16883.0,27.0,249.0,269.0,4668.0,11441.0,139.0,22.0,154.0,21.0,4387.0,112.0,127.0,328.0,1501.0,2028.0,15303.0,91.0,19.0,307.0,19.0,62.0,219.0,127.0,812.0,85.0,34.0,46.0,165.0,25.0,2923.0,123.0,114066.0,85.0,8566.0,389.0,61.0,2140.0,246.0,51.0,127.0,32.0,27618.0,28.0,8.0,355.0,139.0,255.0,5591.0,72.0,88.0,14.0,43.0,181.0,155.0,37.0,146.0,561.0,282.0,28.0,11.0,798.0,16.0,55.0,7197.0,93.0,42.0,797.0,3998.0,1550.0,30.0,35.0,12.0,36.0,111.0,116.0,17.0,127.0,185.0,10.0,10.0,15.0,15.0,15.0,4747.0],\"yaxis\":\"y\",\"type\":\"scattergl\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Runtime (minutes)\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Number of Votes\"}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"Release Year\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Runtime vs Number of Votes (Sample of 2000 Movies)\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('0d335b63-88a4-4d56-bafb-7efe2bb91b9a');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "import plotly.express as px\n",
        "\n",
        "# Ambil hanya film (titleType == \"movie\") dan drop NA di runtime & numVotes\n",
        "movies_df = merged_df[\n",
        "    (merged_df[\"titleType\"] == \"movie\")\n",
        "    & (~merged_df[\"runtimeMinutes\"].isna())\n",
        "    & (~merged_df[\"numVotes\"].isna())\n",
        "]\n",
        "\n",
        "# Ambil sampel 2000 film, random_state agar hasil konsisten\n",
        "sample_movies = movies_df.sample(n=2000, random_state=SEED)\n",
        "\n",
        "# Scatter plot interaktif\n",
        "fig = px.scatter(\n",
        "    sample_movies,\n",
        "    x=\"runtimeMinutes\",\n",
        "    y=\"numVotes\",\n",
        "    color=\"year\",\n",
        "    hover_data=[\"title\", \"averageRating\"],  # tampilkan judul + rating saat hover\n",
        "    title=\"Runtime vs Number of Votes (Sample of 2000 Movies)\",\n",
        "    labels={\n",
        "        \"runtimeMinutes\": \"Runtime (minutes)\",\n",
        "        \"numVotes\": \"Number of Votes\",\n",
        "        \"year\": \"Release Year\"\n",
        "    },\n",
        ")\n",
        "\n",
        "fig.show()\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "bdab6ba0",
      "metadata": {
        "id": "bdab6ba0"
      },
      "source": [
        "### Q2.4\n",
        "\n",
        "Jelaskan tren apa saja yang kamu lihat pada plot di atas."
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Kebanyakan film berdurasi 1,5–2 jam.\n",
        "\n",
        "Hanya sedikit film yang dapat vote sangat banyak, mayoritas sedikit.\n",
        "\n",
        "Film baru cenderung punya lebih banyak vote dibanding film lama."
      ],
      "metadata": {
        "id": "FlOss9mjicpU"
      },
      "id": "FlOss9mjicpU"
    },
    {
      "cell_type": "markdown",
      "id": "c2daf402",
      "metadata": {
        "id": "c2daf402"
      },
      "source": [
        "### Q2.5\n",
        "Tampilkan Dua film mana dalam plot yang masing-masing menerima jumlah suara (votes) terbanyak dan memiliki durasi (runtime) terpanjang ? Kapan keduanya dirilis?"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Film dengan vote terbanyak: The Dark Knight (2008)\n",
        "\n",
        "Film dengan durasi terpanjang: Out 1 (1971)"
      ],
      "metadata": {
        "id": "z02MGounidW2"
      },
      "id": "z02MGounidW2"
    },
    {
      "cell_type": "markdown",
      "id": "f4398a67",
      "metadata": {
        "id": "f4398a67"
      },
      "source": [
        "# Bagian 3: Finding the perfect movie\n",
        "\n",
        "Aakarsh ingin memilih film untuk ditonton malam ini tapi ingin memastikan filmnya tidak terlalu panjang sampai dia bosan. Dia memutuskan untuk membuat sebuah Brainrot Score (BRS) untuk membantunya menemukan film yang sempurna:\n",
        "\n",
        "$$BRS = \\frac{\\text{averageRating}}{\\sqrt{\\text{runtimeMinutes}}}$$\n",
        "\n",
        "\n",
        "Dia juga ingin memastikan kriteria berikut terpenuhi:\n",
        "* Judul harus berupa movie yang dibuat pada tahun 1980 atau setelahnya.\n",
        "* Film tersebut harus memiliki setidaknya 10.000 suara (votes).\n",
        "* Film harus bergenre History, Thriller, atau Comedy.\n",
        "\n",
        "\n",
        "Bisakah kamu membantu Aakarsh dengan menemukan 3 film terbaik berdasarkan **Brainrot Score (BRS)** di masing-masing genre favoritnya?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "id": "21efe40a",
      "metadata": {
        "id": "21efe40a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 332
        },
        "outputId": "a80a01d5-1a32-4544-e549-f891126a1a84"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                               title  year    genres  averageRating  \\\n",
              "124323     Who's Singin' Over There?  1980    Comedy            8.7   \n",
              "187204                     Toy Story  1995    Comedy            8.3   \n",
              "137542           The Marathon Family  1982    Comedy            8.8   \n",
              "237953                     Following  1998  Thriller            7.4   \n",
              "208754                  Run Lola Run  1998  Thriller            7.6   \n",
              "172063                Reservoir Dogs  1992  Thriller            8.3   \n",
              "525092                  Why We Fight  2005   History            8.0   \n",
              "190514  Pretty Village, Pretty Flame  1996   History            8.6   \n",
              "406086                The Fog of War  2003   History            8.0   \n",
              "\n",
              "        runtimeMinutes   numVotes       BRS  \n",
              "124323            86.0    17498.0  0.938145  \n",
              "187204            81.0  1140309.0  0.922222  \n",
              "137542            92.0    17799.0  0.917463  \n",
              "237953            69.0   107417.0  0.890855  \n",
              "208754            80.0   214961.0  0.849706  \n",
              "172063            99.0  1146009.0  0.834181  \n",
              "525092            98.0    10406.0  0.808122  \n",
              "190514           115.0    18625.0  0.801954  \n",
              "406086           107.0    25872.0  0.773389  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d025dc12-6f76-436f-9406-e00fa479e76d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>title</th>\n",
              "      <th>year</th>\n",
              "      <th>genres</th>\n",
              "      <th>averageRating</th>\n",
              "      <th>runtimeMinutes</th>\n",
              "      <th>numVotes</th>\n",
              "      <th>BRS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>124323</th>\n",
              "      <td>Who's Singin' Over There?</td>\n",
              "      <td>1980</td>\n",
              "      <td>Comedy</td>\n",
              "      <td>8.7</td>\n",
              "      <td>86.0</td>\n",
              "      <td>17498.0</td>\n",
              "      <td>0.938145</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>187204</th>\n",
              "      <td>Toy Story</td>\n",
              "      <td>1995</td>\n",
              "      <td>Comedy</td>\n",
              "      <td>8.3</td>\n",
              "      <td>81.0</td>\n",
              "      <td>1140309.0</td>\n",
              "      <td>0.922222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>137542</th>\n",
              "      <td>The Marathon Family</td>\n",
              "      <td>1982</td>\n",
              "      <td>Comedy</td>\n",
              "      <td>8.8</td>\n",
              "      <td>92.0</td>\n",
              "      <td>17799.0</td>\n",
              "      <td>0.917463</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>237953</th>\n",
              "      <td>Following</td>\n",
              "      <td>1998</td>\n",
              "      <td>Thriller</td>\n",
              "      <td>7.4</td>\n",
              "      <td>69.0</td>\n",
              "      <td>107417.0</td>\n",
              "      <td>0.890855</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>208754</th>\n",
              "      <td>Run Lola Run</td>\n",
              "      <td>1998</td>\n",
              "      <td>Thriller</td>\n",
              "      <td>7.6</td>\n",
              "      <td>80.0</td>\n",
              "      <td>214961.0</td>\n",
              "      <td>0.849706</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172063</th>\n",
              "      <td>Reservoir Dogs</td>\n",
              "      <td>1992</td>\n",
              "      <td>Thriller</td>\n",
              "      <td>8.3</td>\n",
              "      <td>99.0</td>\n",
              "      <td>1146009.0</td>\n",
              "      <td>0.834181</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>525092</th>\n",
              "      <td>Why We Fight</td>\n",
              "      <td>2005</td>\n",
              "      <td>History</td>\n",
              "      <td>8.0</td>\n",
              "      <td>98.0</td>\n",
              "      <td>10406.0</td>\n",
              "      <td>0.808122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>190514</th>\n",
              "      <td>Pretty Village, Pretty Flame</td>\n",
              "      <td>1996</td>\n",
              "      <td>History</td>\n",
              "      <td>8.6</td>\n",
              "      <td>115.0</td>\n",
              "      <td>18625.0</td>\n",
              "      <td>0.801954</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>406086</th>\n",
              "      <td>The Fog of War</td>\n",
              "      <td>2003</td>\n",
              "      <td>History</td>\n",
              "      <td>8.0</td>\n",
              "      <td>107.0</td>\n",
              "      <td>25872.0</td>\n",
              "      <td>0.773389</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d025dc12-6f76-436f-9406-e00fa479e76d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d025dc12-6f76-436f-9406-e00fa479e76d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d025dc12-6f76-436f-9406-e00fa479e76d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-0f2a771b-167c-4fac-90ad-ec64ac387043\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0f2a771b-167c-4fac-90ad-ec64ac387043')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-0f2a771b-167c-4fac-90ad-ec64ac387043 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_3bd894e4-e4a9-4c65-bf44-4c71a15848fd\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('top_movies')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_3bd894e4-e4a9-4c65-bf44-4c71a15848fd button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('top_movies');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "top_movies",
              "summary": "{\n  \"name\": \"top_movies\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Pretty Village, Pretty Flame\",\n          \"Toy Story\",\n          \"Reservoir Dogs\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1980,\n        \"max\": 2005,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1995,\n          2005,\n          1980\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genres\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Comedy\",\n          \"Thriller\",\n          \"History\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"averageRating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4833333333333333,\n        \"min\": 7.4,\n        \"max\": 8.8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8.7,\n          8.3,\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runtimeMinutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.443376028862195,\n        \"min\": 69.0,\n        \"max\": 115.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          115.0,\n          81.0,\n          99.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"numVotes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 482674.53731759044,\n        \"min\": 10406.0,\n        \"max\": 1146009.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          18625.0,\n          1140309.0,\n          1146009.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BRS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.059754985055198204,\n        \"min\": 0.7733891912365308,\n        \"max\": 0.9381451268699141,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.8019541350866698,\n          0.9222222222222223,\n          0.8341813866651461\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 24
        }
      ],
      "source": [
        "import numpy as np\n",
        "\n",
        "# Hitung Brainrot Score\n",
        "merged_df[\"BRS\"] = merged_df[\"averageRating\"] / np.sqrt(merged_df[\"runtimeMinutes\"])\n",
        "\n",
        "# Filter sesuai kriteria Aakarsh\n",
        "filtered = merged_df[\n",
        "    (merged_df[\"titleType\"] == \"movie\") &\n",
        "    (merged_df[\"year\"] >= 1980) &\n",
        "    (merged_df[\"numVotes\"] >= 10000) &\n",
        "    (merged_df[\"genres\"].isin([\"History\", \"Thriller\", \"Comedy\"]))\n",
        "].dropna(subset=[\"BRS\"])\n",
        "\n",
        "# Ambil 3 film terbaik di tiap genre\n",
        "top_movies = (\n",
        "    filtered.sort_values(by=\"BRS\", ascending=False)\n",
        "    .groupby(\"genres\")\n",
        "    .head(3)\n",
        "    .loc[:, [\"title\", \"year\", \"genres\", \"averageRating\", \"runtimeMinutes\", \"numVotes\", \"BRS\"]]\n",
        ")\n",
        "\n",
        "top_movies\n"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "base",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.12.2"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}